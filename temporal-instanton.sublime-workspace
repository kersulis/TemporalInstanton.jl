{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"tmp_inst_A_",
				"tmp_inst_A_scale_new"
			],
			[
				"loop_th",
				"loop_through_lines_new"
			],
			[
				"theta",
				"theta	\\^theta"
			],
			[
				"tehta",
				"theta	\\theta"
			],
			[
				"solve",
				"solve_temporal_instanton"
			],
			[
				"return_",
				"return_Bhat"
			],
			[
				"tr_tran",
				"tr_trans_rotate"
			],
			[
				"temporal",
				"temporalInstanton"
			],
			[
				"tmp_in",
				"tmp_inst_pad_Q"
			],
			[
				"tmp_inst",
				"tmp_inst_A_scale"
			],
			[
				"tmp_inst_A",
				"tmp_inst_A_scale"
			],
			[
				"psData",
				"psDataLoad"
			],
			[
				"Float",
				"float64"
			],
			[
				"thet",
				"theta	\\^theta"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "module TemporalInstanton3\n\nusing HDF5, JLD, ProgressMeter\n\nexport\n    solve_instanton_qcqp, solve_temporal_instanton, LineModel\n\ninclude(\"PowerFlow.jl\")\n\n# THERMAL MODELING\ntype LineModel\n    from\n    to\n    rij\n    xij\n    length\n    D0\n    mCp\n    Ilim\n    r\n    Tlim\n    ηc\n    ηr\n    qs\nend\n\nfunction add_thermal_parameters(line_model,conductor_name)\n    \"\"\" Assign values to fields of LineModel type instance.\n    Uses data from Mads's MPC paper.\n    \"\"\"\n    if conductor_name == \"waxwing\"\n        line_model.D0   = 15.5e-3\n        line_model.mCp  = 383.\n        line_model.Ilim = 439.\n        line_model.r    = 110e-6\n        line_model.Tlim = 65.\n        line_model.ηc   = 0.955\n        line_model.ηr   = 2.207e-9\n        line_model.qs   = 14.4\n    elseif conductor_name == \"dove\"\n        line_model.D0   = 23.5e-3\n        line_model.mCp  = 916.\n        line_model.Ilim = 753.\n        line_model.r    = 60e-6\n        line_model.Tlim = 69.\n        line_model.ηc   = 1.179\n        line_model.ηr   = 3.346e-9\n        line_model.qs   = 21.9\n    end\n    return line_model\nend\n\nfunction compute_a(mCp,ηc,ηr,Tamb,Tlim)\n    \"\"\" Returns constant a [1/s]\n    mCp [J/m-C] is line heat capacity\n    ηc [W/m-C] is conductive heat loss rate coefficient\n    ηr [W/m-C^4] is radiative heat loss rate coefficient\n    Tamb [C] is ambient temperature (of air)\n    Tlim [C] is highest allowable line temperature\n    \"\"\"\n    Tmid = (Tamb + Tlim)/2\n    return mCp\\(-ηc - 4*ηr*(Tmid + 273)^3)\nend\n\nfunction compute_c(mCp,r,x,Sb,L)\n    \"\"\" Return constant c [W/m]\n    mCp [J/m-C] is line heat capacity\n    r [pu] is line resistance\n    x [pu] is line reactance\n    Sb [W] is system base MVA\n    L [m] is line length\n    \"\"\"\n    return r*Sb/(3*mCp*L*(x^2))\nend\n\nfunction compute_d(mCp,ηc,ηr,Tamb,Tlim,q_solar)\n    \"\"\" Returns constant d [W/m]\n    mCp [J/m-C] is line heat capacity\n    ηc [W/m-C] is conductive heat loss rate coefficient\n    ηr [W/m-C^4] is radiative heat loss rate coefficient\n    Tamb [C] is ambient temperature (of air)\n    Tlim [C] is highest allowable line temperature\n    q_solar [W/m] is the solar heat gain rate\n    \"\"\"\n    Tmid = (Tamb + Tlim)/2\n    return mCp\\(ηc*Tamb - ηr*((Tmid + 273)^4 - (Tamb + 273)^4) + 4*ηr*Tmid*(Tmid+273)^3 + q_solar)\nend\n\nfunction compute_f(int_length,a,d,n,T0)\n    \"\"\" Returns constant f\n    int_length [s] is length of each interval\n    a [1/s] is a constant\n    d [W/m] is a constant\n    n [-] is the number of time intervals\n    T0 [C] is the initial steady-state line temp\n    \"\"\"\n    sum_coeff = sum([(e^(int_length*a))^i - (e^(int_length*a))^(i-1) for i in 1:n])\n    return (e^(int_length*a))^n*T0 + (d/a)*sum_coeff\nend\n\n# TEMPORAL INSTANTON\nfunction tmp_inst_Qobj(n,nr,T)\n    \"\"\" Generate the objective function matrix\n    Qobj from the problem dimensions.\n    Assume no correlation between wind sites.\n    \"\"\"\n    Qobj = sparse(diagm(repeat([ones(nr),zeros(n+1)],outer=[T])))\n    #Qobj = tmp_inst_pad_Q(full(Qobj),T)\n    return Qobj\nend\n\nfunction tmp_inst_pad_Q(Q,T)\n    \"\"\" Add T rows and T columns of zeros\n    to matrix Q\n    \"\"\"\n    m,n = size(Q)\n    return [[Q zeros(m,T)]; zeros(T,n+T)]\nend\n\nfunction tmp_inst_A(Ridx,T,Y,ref,k)#,tau,line)\n    \"\"\" Generate the power balance constraint A matrix\n    from problem dimensions, admittance matrix,\n    and generator participation factors.\n    Assumes the admittance matrix is n-by-n.\n    \n    Returns A, which is (n+1)*T-by-(nr+n+1)*T\n    \n    * nr is the number of wind farms in the network\n    * n is the number of nodes in the network\n    * Ridx is a vector indicating wind farm locations\n    * T is the number of time steps\n    * Y is the admittance matrix (n-by-n)\n    * ref is the index of the angle reference bus\n    * k is the vector of generator participation factors\n    \"\"\"\n    \n    function ei(n,i)\n        e = zeros(n)\n        e[i] = 1.\n        return e\n    end\n    \n    n = size(Y,1)\n    \n    # A has a block diagonal pattern where each\n    # block is Atemp:\n    Atemp = [[-eye(n)    Y       -k];\n            zeros(1,n) ei(n,ref)' 0]\n    \n    # Remove columns corresponding to non-wind nodes:\n    Atemp = sparse(Atemp[:,[Ridx,n+1:2*n+1]])\n    \n    # Now we can tile the Atemp matrix to generate A:\n    A = Atemp\n    for t = 2:T\n        A = blkdiag(A, Atemp)\n    end\n\n    # These rows relate auxiliary angle variables to\n    # original angle variables:\n    #     A2 = tmp_inst_A_scale(n,Ridx,T,tau,ref,line)\n\n    #     # Augment A with new rows:\n    #     A = [[full(A) zeros((n+1)*T,T)]; A2]\n    \n    return A\nend\n\nfunction tmp_inst_b(n,T,G0,P0,D)\n    \"\"\" Generate the vector b of power balance constraints.\n    Assumes G0 and D are nT-by-1 vectors.\n    \"\"\"\n    b = FloatingPoint[]\n    netGen = G0 + P0 - D\n\n    for t = 1:T\n        start = (t-1)*n + 1\n        stop = start + n - 1\n        append!(b,netGen[start:stop])\n        push!(b,0.)\n    end\n\n    # Extend b with T additional zeroes:\n    # tmp_inst_pad_b(b,T)\n    return b\nend\n\nfunction tmp_inst_pad_b(b,T)\n    \"\"\" Append T zeros to vector b\n    \"\"\"\n    append!(b,zeros(T))\nend\n\nfunction tmp_inst_Qtheta(n,nr,T)#,tau)\n    \"\"\" Generate Q_theta in the temperature constraint\n    of a temporal instanton problem instance.\n    \"line\" has the form (i,k), where i and k refer to\n    the endpoints of the chosen line.\n    \"\"\"\n    Qtheta = zeros((nr+n+2)*T,(nr+n+2)*T)\n    \n    Qtheta[end-T+1:end,end-T+1:end] = eye(T)\n    return Qtheta\nend\n\nfunction tmp_inst_A_scale_new(n,Ridx,T,line,therm_a,int_length)\n    \"\"\" Augment A with T additional rows relating\n    angle difference variables to angle variables.\n    \n    Returns a T-by-(n+nr+2)*T matrix that may be\n    concatenated with the output of temp_inst_A\n    \n    Arguments:    \n    * n is the number of nodes in the network\n    * Ridx is a vector indicating wind nodes\n    * T is the number of time steps\n    * tau is the thermal coefficient from IEEE 738\n    * slack is the index of the slack bus\n    * line is the pair (i,k) indicating the chosen\n    line\n    * therm_a is a constant defined by heating parameters\n    * int_length is interval length in seconds (e.g. 600 \n        for 10 minutes)\n    \"\"\"\n    (i,k) = line\n    nr = length(Ridx)\n    \n    A = zeros(T,(nr+n+2)*T)\n    \n    for t = 1:T\n        i_pos = (nr+n+1)*(t-1) + nr + i\n        k_pos = (nr+n+1)*(t-1) + nr + k\n        coef = sqrt(-exp(therm_a*int_length)^(T-t+1) + exp(therm_a*int_length)^(T-t))\n        A[t,i_pos] = -coef\n        A[t,k_pos] = coef\n        A[t,(n+nr+1)*T + t] = 1\n    end\n    return A\nend\n\nfunction partition_A(A,Qobj,T)\n    \"\"\" Return A1, A2, A3 where:\n    * A1 corresponds to wind\n    * A2 corresponds to angles + mismatch\n    * A3 corresponds to angle difference vars\n\n    Used to find x_star, the min-norm solution to\n    Ax=b such that x_star[idx3] = 0.\n    \"\"\"\n    m,n = size(A)   \n    idx1 = find(diag(Qobj))\n    idx2 = setdiff(1:n-T,idx1)\n    idx3 = n-T+1:n\n    idx = [idx1,idx2,idx3]\n    \n    A1 = A[:,idx1]\n    A2 = A[:,idx2]\n    A3 = A[:,idx3]\n    return A1,A2,A3,idx1,idx2,idx3\nend\n\nfunction find_x_star(Qobj,A,b,T)\n    \"\"\" x_star is the vector by which the problem must\n    be translated in the first step of the temporal\n    instanton QCQP solution.\n\n    x_star is chosen to be the point in the set Ax=b\n    nearest to the origin such that x_star[idx3] = 0.\n    This condition ensures no linear term is introduced\n    into the quadratic constraint.\n    \"\"\"\n    A1,A2,A3,idx1,idx2,idx3 = partition_A(A,Qobj,T)\n    x_star = zeros(size(A,2))\n    x_star[[idx1,idx2]] = [A1 A2]\\b\n    return x_star\nend\n\nfunction translate_quadratic(G_of_x,x_star)\n    \"\"\" This function performs the change of variables from x to z,\n    where z = x - x_star. (For translating a quadratic problem.)\n    Returns triple H_of_x consisting of matrix H, vector h, constant kh.\n\n    Arguments\n    G_of_x consists of matrix G, vector g, constant kg.\n    x_star is translation.\n\n    Used to perform second step of temporal instanton solution method,\n    assuming x_star is min-norm solution of Ax=b.\n    \"\"\"\n    G,g,kg = G_of_x\n    if g == 0\n        g = zeros(size(G,1),1)\n    end\n    H = G\n    h = g + 2*G*x_star\n    kh = kg + x_star'*G*x_star + g'*x_star\n    return (H,h,kh[1])\nend\n\nfunction kernel_rotation(A)\n    \"\"\" Find an orthonormal basis for the nullspace of A.\n    This matrix may be used to rotate a temporal instanton\n    problem instance to eliminate all but nullity(A) elements.\n    \"\"\"\n    m,n = size(A)\n    dim_N = n - rank(A)\n    # if A has full row rank:\n    # dim_N = n - m\n    q = qr(A'; thin=false)[1]\n    R = circshift(q,(0,dim_N))\n    return R\nend\n\nfunction rotate_quadratic(G_of_x,R)\n    \"\"\" Rotate quadratic G_of_x by\n    rotation matrix R.\n    \"\"\"\n    G,g,kg = G_of_x\n    return (R*G*R',R*g,kg)\nend\n\nfunction return_K(D)\n    K = ones(length(D))\n    K[find(D)] = sqrt(D[find(D)])\n    K = diagm(K)\n    return K\nend\n\nfunction partition_B(G_of_w,Q_of_w)\n    B,b = G_of_w[1],G_of_w[2]\n    Q = round(Q_of_w[1])\n    i2 = find(diag(Q))\n    i1 = setdiff(1:size(Q,1),i2)\n    B11,B12,B21,B22 = B[i1,i1],B[i1,i2],B[i2,i1],B[i2,i2]\n    b1 = b[i1]\n    b2 = b[i2]\n    return B11,B12,B21,B22,b1,b2\nend\n\nfunction return_Bhat(B11,B12,B22,b1,b2)\n    Bhat = B22 - (B12'/B11)*B12\n    bhat = b2 - (B12'/B11)*b1\n    return round(Bhat,10),bhat\nend\n\nfunction find_w(v,D,d)\n    if v == 0\n        w = float([-d[i]/(D[i,i]) for i in 1:length(d)])\n    else\n        w = float([d[i]/(v - D[i,i]) for i in 1:length(d)])\n    end\n    return w\nend\n\nfunction solve_secular(D,d,c)\n    \"\"\" Solve the secular equation via binary search.\n    \"\"\"\n    eps = 1e-8\n    solutions = Float64[]\n    vectors = Array(Vector{Float64},0)\n    poles = sort(unique(round(diag(D),10)))\n    \n    # Each diagonal element is a pole.\n    for i in 1:length(poles)\n        \n        # Head left first:\n        high = poles[i]\n        if length(poles) == 1\n            low = high - high\n        elseif i == 1\n            low = high - abs(poles[i] - poles[i+1])\n        else\n            low = high - abs(poles[i] - poles[i-1])/2\n        end\n        \n        # Initialize v:\n        v = (high + low)/2\n        w = find_w(v,D,d)\n        diff = (w'*w)[1] - c\n        diff_old = 0\n        stall = false\n        while abs(diff) > eps\n            if diff == diff_old\n                stall = true\n                break\n            end\n            if diff > 0\n                high = v\n            else\n                low = v\n            end\n            v = (high + low)/2\n            w = find_w(v,D,d)\n            diff_old = diff\n            diff = (w'*w)[1] - c\n        end\n        if !stall\n            push!(solutions,v)\n            push!(vectors,w)\n        end\n        \n        # Now head right:\n        high = poles[i]\n        if length(poles) == 1\n            low = high + high\n        elseif i == length(poles)\n            low = high + abs(poles[i] - poles[i-1])\n        else\n            low = high + abs(poles[i] - poles[i+1])/2\n        end\n        \n        v = (high + low)/2\n        w = find_w(v,D,d)\n        diff = (w'*w)[1] - c\n        diff_old = 0\n        stall = false\n        while abs(diff) > eps\n            if diff == diff_old\n                stall = true\n                break\n            end\n            if diff > 0\n                high = v\n            else\n                low = v\n            end\n            v = (high + low)/2\n            w = find_w(v,D,d)\n            diff_old = diff\n            diff = (w'*w)[1] - c\n        end\n        if !stall\n            push!(solutions,v)\n            push!(vectors,w)\n        end\n    end\n    return solutions,vectors\nend\n\nfunction return_xopt(w2opt,B11,B12,b1,N,U,K,x_star)\n    w1opt = -B11\\(B12*w2opt + b1/2)\n    wopt = [w1opt,w2opt]\n    xopt = (N*U/K)*wopt + x_star\n    return xopt\nend\n\nfunction solve_instanton_qcqp(G_of_x,Q_of_x,A,b,T)\n    \"\"\" This function solves the following quadratically-\n    constrained quadratic program:\n\n        min  G_of_x\n        s.t. A*x = b\n             Q_of_x = 0\n\n    where   G_of_x = x'*Qobj*x,\n            Q_of_x = x'*Qtheta*x - c\n\n    Thus, an equivalent problem expression is:\n\n        min  z'*Qobj*z\n        s.t. A*z = b\n             z'*Qtheta*z = c\n\n    The solution method is due in part to work by\n    Dr. Dan Bienstock of Columbia University. It\n    involves translating and rotating the problem,\n    using partial KKT conditions, and solving the\n    resulting secular equation.\n    \"\"\"\n\n    Qobj = G_of_x[1]\n    c = - Q_of_x[3]\n    \n    opt = Array(Vector{Float64},0)\n    \n    # Partition A:\n    A1,A2,A3,idx1,idx2,idx3 = partition_A(A,Qobj,T)\n\n    # Find translation point:\n    x_star = find_x_star(Qobj,A,b,T)\n\n    # Translate quadratics:\n    G_of_y = translate_quadratic(G_of_x,x_star)\n    Q_of_y = translate_quadratic(Q_of_x,x_star)\n\n    N = kernel_rotation(A)[:,1:size(A,2) - rank(A)] # take only first k cols\n\n    N1,N2,N3 = N[idx1,:],N[idx2,:],N[idx3,:] # partition N\n\n    G_of_z = rotate_quadratic(G_of_y,N')\n    Q_of_z = rotate_quadratic(Q_of_y,N')\n\n    D,U = eig(Q_of_z[1])\n    D = round(D,10)\n\n    K = return_K(D)\n\n    G_of_w = rotate_quadratic(G_of_z,(U/K)')\n    Q_of_w = rotate_quadratic(Q_of_z,(U/K)')\n\n    B11,B12,B21,B22,b1,b2 = partition_B(G_of_w,Q_of_w)\n\n    Bhat,bhat = return_Bhat(B11,B12,B22,b1,b2)\n\n    eps = 1e-8\n    w0 = find_w(0,Bhat,bhat/2)\n\n    if abs((w0'*w0) - c)[1] < eps\n        println(\"v=0 works!\")\n    end\n\n    solutions, vectors = solve_secular(Bhat,bhat/2,-Q_of_w[3])\n    if isempty(solutions)\n        return [],Inf\n    else\n        sol = zeros(length(vectors))\n        for i in 1:length(vectors)\n            w2 = vectors[i]\n            xvec = return_xopt(w2,B11,B12,b1,N,U,K,x_star)\n            sol[i] = (xvec'*Qobj*xvec)[1]\n            push!(opt,xvec)\n        end\n    end\n\n    return opt[indmin(sol)],minimum(sol)\nend\n\nfunction solve_temporal_instanton(\n    Ridx,\n    Y,\n    G0,\n    P0,\n    D0,\n    Sb,\n    ref,\n    lines,\n    res,\n    reac,\n    k,\n    line_lengths,\n    Tamb,\n    T0,\n    int_length)\n    \"\"\" Convenience function used to perform temporal\n    instanton analysis on many lines in a system at once.\n    \"\"\"\n\n    n = length(k)\n    nr = length(Ridx)\n    T = int64(length(find(P0))/nr)\n    \n    numLines = length(lines)\n\n    # Initialize progress meter:\n    prog = Progress(length(find(line_lengths)),1)\n\n    # Initialize vars used to store results:\n    score = Float64[]\n    α = Array(Vector{Float64},0)\n\n    θ = Array(Array,0)\n    x = Array(Array,0)\n    diffs = Array(Array,0)\n    xopt = Array(Array,0)\n\n    # Create Qobj:\n    Qobj = tmp_inst_Qobj(n,nr,T)\n    # Augment Qobj with additional rows and columns of zeros:\n    Qobj = tmp_inst_pad_Q(full(Qobj),T)\n\n    # Create A1 (only A2 changes during opt.):\n    A1 = full(tmp_inst_A(Ridx,T,Y,ref,k))\n    A1 = [A1 zeros((n+1)*T,T)]\n\n    # Create b:\n    b = tmp_inst_b(n,T,G0,P0,D0)\n    # Augment b with new elements:\n    tmp_inst_pad_b(b,T)\n\n    # Create Qtheta:\n    Qtheta = tmp_inst_Qtheta(n,nr,T)\n\n    # Form objective quadratic:\n    G_of_x = (Qobj,0,0)    \n\n    # Loop through all lines:\n    for idx = 1:numLines\n        # thermal model cannot handle zero-length lines:\n        if line_lengths[idx] == 0\n            continue\n        end\n        line = lines[idx]\n        line_model = LineModel(line[1],\n                    line[2],\n                    res[idx],\n                    reac[idx],\n                    line_lengths[idx],\n                    NaN,\n                    NaN,\n                    NaN,\n                    NaN,\n                    NaN,\n                    NaN,\n                    NaN,\n                    NaN)\n\n        add_thermal_parameters(line_model, \"waxwing\")\n\n        therm_a = compute_a(line_model.mCp,\n                            line_model.ηc,\n                            line_model.ηr,\n                            Tamb,\n                            line_model.Tlim)\n        therm_c = compute_c(line_model.mCp,\n                            line_model.rij,\n                            line_model.xij,\n                            Sb,\n                            line_model.length)\n        therm_d = compute_d(line_model.mCp,\n                            line_model.ηc,\n                            line_model.ηr,\n                            Tamb,\n                            line_model.Tlim,\n                            line_model.qs)\n        therm_f = compute_f(int_length,\n                            therm_a,\n                            therm_d,\n                            T,\n                            T0)\n        \n        # thermal constraint, Q(z) = 0:\n        kQtheta = (therm_a/therm_c)*(line_model.Tlim - therm_f)\n        Q_of_x = (Qtheta,0,kQtheta)\n\n        # array of vec. with Float values:\n        deviations = Array(Vector{Float64},0)\n        angles = Array(Vector{Float64},0)\n        alpha = Float64[]\n\n        # Create A2 based on chosen line:\n        A2 = tmp_inst_A_scale_new(n,Ridx,T,line,therm_a,int_length)\n        # Stack A1 and A2:\n        A = [A1; A2]\n\n        xvec,sol = solve_instanton_qcqp(G_of_x,Q_of_x,A,b,T)\n        push!(score,sol)\n        if isinf(sol)\n            push!(deviations,[])\n            push!(angles,[])\n            push!(alpha,NaN)\n            push!(diffs,[])\n        else\n\n            # Variable breakdown:\n            # (nr+n+1) per time step\n            #   First nr are deviations\n            #   Next n are angles\n            #   Last is mismatch\n            # T variables at the end: anglediffs\n            for t = 1:T\n                push!(deviations,xvec[(nr+n+1)*(t-1)+1:(nr+n+1)*(t-1)+nr])\n                push!(angles,xvec[(nr+n+1)*(t-1)+nr+1:(nr+n+1)*(t-1)+nr+n])\n                push!(alpha,xvec[(nr+n+1)*(t)])\n            end\n            push!(diffs,xvec[end-T+1:end])\n        end\n\n        push!(x,deviations)\n        push!(θ,angles)\n        push!(α,alpha)\n        push!(xopt,xvec)\n\n        next!(prog)\n    end\n    return score,x,θ,α,diffs,xopt\nend\n\nend",
			"file": "src/TemporalInstanton3.jl",
			"file_size": 17806,
			"file_write_time": 130798248994256269,
			"settings":
			{
				"buffer_size": 17780,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/PowerFlow.jl",
			"settings":
			{
				"buffer_size": 2174,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 220.0,
		"last_filter": "anfnf",
		"selected_items":
		[
			[
				"anfnf",
				"ANF: New File"
			],
			[
				"anfn",
				"ANF: New File"
			],
			[
				"ssla",
				"Set Syntax: LaTeXing"
			],
			[
				"sslate",
				"Set Syntax: LaTeX"
			],
			[
				"anf",
				"ANF: Copy Current File"
			],
			[
				"anfr",
				"ANF: Rename File"
			],
			[
				"user",
				"Preferences: Settings - User"
			],
			[
				"pkgi",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Preferences: Browse Packages"
			],
			[
				"packa",
				"Package Control: Upgrade Package"
			],
			[
				"anfd",
				"ANF: Delete Current File"
			],
			[
				"pkglist",
				"Package Control: List Packages"
			],
			[
				"upgra",
				"Package Control: Upgrade Package"
			],
			[
				"matl",
				"Set Syntax: MATLAB"
			],
			[
				"mat",
				"Set Syntax: MATLAB"
			],
			[
				"inde",
				"Indentation: Convert to Spaces"
			],
			[
				"anfc",
				"ANF: Copy Current File"
			],
			[
				"ma",
				"Set Syntax: MATLAB"
			],
			[
				"",
				"Convert Case: Title Case"
			],
			[
				"julia",
				"Set Syntax: Julia"
			],
			[
				"juli",
				"Set Syntax: Julia"
			],
			[
				"inden",
				"Indentation: Convert to Spaces"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"lines",
				"Table Editor: Show demo film in new scratch view"
			],
			[
				"matla",
				"Set Syntax: MATLAB"
			],
			[
				"ann",
				"ANF: New File"
			],
			[
				"an",
				"ANF: Rename File"
			],
			[
				"anr",
				"ANF: Rename File"
			],
			[
				"pkg in",
				"Package Control: Install Package"
			],
			[
				"packa in",
				"Package Control: Install Package"
			],
			[
				"table",
				"Table Editor: Enable for current view"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"fold",
				"Project: Add Folder"
			]
		],
		"width": 1204.0
	},
	"console":
	{
		"height": 252.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/notes"
	],
	"file_history":
	[
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/LineThermalModel.jl",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/tmp_inst_rts96.jl",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton.jl",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton2.jl",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/readRTS96Data.jl",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/2015-04-14-GroupPresentation/ipynb_presentation_building.md",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/2015-04-14-GroupPresentation/slides.slides.html",
		"/home/jkersulis/.ipython/profile_julia/ipython_notebook_config.py",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/quals2/presentation/slides.ipynb",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/notes/2015-05-04 Meeting with Ian.md",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/notes/2015-04-15-Meeting-with-Ian.md",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/data/RTS-96 Data/CaseData.m",
		"/home/jkersulis/.ipython/profile_julia/ipython_n",
		"/home/jkersulis/Documents/ipython/IPython/html/static/style/ipython.min.css",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/.gitignore",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/2015-04-14-GroupPresentation/style/misc.css",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/2015-04-14-GroupPresentation/slides.ipynb",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/2015-04-14-GroupPresentation/ipython.min.css",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/2015-04-14-GroupPresentation/font-awesome-4.3.0/css/font-awesome.css",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/2015-04-14-GroupPresentation/bootstrap-3.3.4-dist/css/bootstrap.css",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/plotResults.jl",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/maxTemp.jl",
		"/home/jkersulis/Documents/Dropbox/Winter 2015/511IOE/course_eval.md",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TrustRegionSubproblem.jl",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/paper/paperdetails.txt",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/paper/PowerTechPaper_ian.tex",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/paper/PowerTechPaper.tex",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/plotTemporalInstantonResults",
		"/home/jkersulis/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/nbs/TrustRegionSubproblem.ipynb",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/notes/Quals2Abstract.md",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/notes/2015-03-04-meeting-with-Ian.md",
		"/home/jkersulis/Downloads/CaseData.m",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/README.md",
		"/home/jkersulis/Downloads/Report, 2015-03-02.html",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/psDataLoad.jl",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/instanton.jl",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/TemporalInstanton.jl",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/temporal-instanton.sublime-project",
		"/home/jkersulis/Documents/kersulis.github.io/_posts/2014-09-04-mhacks-and-the-new-term.md",
		"/home/jkersulis/Documents/kersulis.github.io/_posts/2014-09-05-mhacks.md",
		"/home/jkersulis/Documents/kersulis.github.io/_posts/2014-07-29-productivity-breakthrough.md",
		"/home/jkersulis/Documents/kersulis.github.io/_posts/2014-07-31-end-of-internship.md",
		"/home/jkersulis/Documents/kersulis.github.io/_posts/2014-07-25-morning-routine.md",
		"/home/jkersulis/Documents/kersulis.github.io/_posts/2014-07-20-summer-at-los-alamos.md",
		"/home/jkersulis/Documents/ipython/docs/source/whatsnew/version3_widget_migration.rst",
		"/home/jkersulis/Documents/kersulis.github.io/_drafts/2014-07-20-pomodoros.md",
		"/home/jkersulis/Documents/kersulis.github.io/_drafts/2015-02-19-ipython-anew.md",
		"/home/jkersulis/Documents/Dropbox/Winter 2015/511IOE/hw/ioe511.sublime-project",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/notes/2015-02-06-sustainability.md",
		"/home/jkersulis/Documents/Dropbox/Winter 2015/511IOE/hw/4hw/code/check.m",
		"/home/jkersulis/Documents/Dropbox/Winter 2015/511IOE/hw/4hw/code/f.m",
		"/home/jkersulis/Documents/Dropbox/Winter 2015/511IOE/hw/4hw/code/grad.m",
		"/home/jkersulis/Documents/Dropbox/Winter 2015/511IOE/hw/4hw/code/backtracking.m",
		"/home/jkersulis/Documents/Dropbox/Winter 2015/511IOE/hw/4hw/code/bisection.m",
		"/home/jkersulis/Documents/Dropbox/Winter 2015/511IOE/hw/3hw/solution/bisection.m",
		"/home/jkersulis/Documents/Dropbox/Winter 2015/511IOE/hw/3hw/solution/backtracking.m",
		"/home/jkersulis/Documents/Dropbox/Winter 2015/511IOE/hw/4hw/code/hesseval.m",
		"/home/jkersulis/Documents/Dropbox/Winter 2015/511IOE/hw/4hw/code/hess.m",
		"/home/jkersulis/Documents/Dropbox/Winter 2015/511IOE/hw/4hw/.ipynb_checkpoints/hessian-checkpoint.ipynb",
		"/home/jkersulis/Documents/Dropbox/Winter 2015/511IOE/hw/3hw/solution/check.m",
		"/home/jkersulis/Documents/Dropbox/Winter 2015/511IOE/hw/4hw/code/newtbt.m",
		"/home/jkersulis/Documents/Dropbox/Winter 2015/511IOE/hw/3hw/solution/f.m",
		"/home/jkersulis/Documents/Dropbox/Winter 2015/511IOE/hw/3hw/solution/grad.m",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/notes/2015-02-05-meeting-with-Ian.md",
		"/home/jkersulis/Downloads/Start/index.html",
		"/home/jkersulis/Documents/sandBox/matpowerProject/System.jl",
		"/home/jkersulis/Documents/matpower/matpower4.1/opf_args.m",
		"/home/jkersulis/Documents/matpower/matpower4.1/dcopf.m",
		"/home/jkersulis/Documents/matpower/matpower4.1/t/soln9_opf_PQcap.mat",
		"/home/jkersulis/Documents/matpower/matpower4.1/opf.m",
		"/home/jkersulis/Documents/matpower/matpower4.1/define_constants.m",
		"/home/jkersulis/Documents/matpower/matpower4.1/rundcopf.m",
		"/home/jkersulis/Documents/matpower/matpower4.1/remove_userfcn.m",
		"/home/jkersulis/Documents/matpower/matpower4.1/README",
		"/home/jkersulis/Documents/matpower/matpower4.1/dcpf.m",
		"/home/jkersulis/Documents/ipython/build/lib.linux-x86_64-2.7/IPython/html/utils.py",
		"/home/jkersulis/Documents/ipython/build/lib/IPython/html/utils.py",
		"/home/jkersulis/Documents/ipython/IPython/html/tests/base/utils.js",
		"/home/jkersulis/Documents/ipython/IPython/kernel/tests/utils.py",
		"/home/jkersulis/Documents/ipython/IPython/html/utils.py",
		"/home/jkersulis/Documents/ipython/IPython/parallel/util.py",
		"/home/jkersulis/Documents/ipython/docs/source/whatsnew/pr/user-templates.rst",
		"/home/jkersulis/Documents/ipython/.ipynb_checkpoints/Untitled-checkpoint.ipynb",
		"/home/jkersulis/Documents/ipython/IPython/html/widgets/widget.py",
		"/home/jkersulis/Documents/ipython/IPython/html/widgets/widget_image.py",
		"/home/jkersulis/Documents/ipython/IPython/html/static/components/es6-promise/promise.min.js",
		"/home/jkersulis/Documents/ipython/build/lib/IPython/html/static/components/es6-promise/promise.js",
		"/home/jkersulis/Documents/ipython/build/lib.linux-x86_64-2.7/IPython/html/static/components/es6-promise/promise.js",
		"/home/jkersulis/Documents/ipython/IPython/html/static/components/es6-promise/promise.js",
		"/home/jkersulis/Documents/ipython/IPython/core/prompts.py",
		"/home/jkersulis/Documents/ipython/IPython/core/profileapp.py",
		"/home/jkersulis/Documents/ipython/examples/IPython Kernel/Third Party Rich Output.ipynb",
		"/home/jkersulis/Documents/ipython/git-hooks/post-checkout",
		"/home/jkersulis/Documents/ipython/examples/IPython Kernel/ipython-get-history.py",
		"/home/jkersulis/Documents/ipython/docs/source/whatsnew/github-stats-0.11.rst",
		"/home/jkersulis/Documents/ipython/docs/resources/generate_icons.sh",
		"/home/jkersulis/Documents/ipython/IPython/html/static/components/bootstrap/fonts/glyphicons-halflings-regular.woff",
		"/home/jkersulis/Documents/ipython/IPython/html/static/components/bootstrap/less/responsive-embed.less",
		"/home/jkersulis/Documents/ipython/README.rst",
		"/home/jkersulis/Documents/ipython/build/scripts-2.7/ipython",
		"/home/jkersulis/Documents/ipython/examples/Interactive Widgets/Image Processing.ipynb",
		"/home/jkersulis/Documents/ipython/build/scripts-2.7/ipcluster",
		"/home/jkersulis/Documents/kersulis.github.io/_posts/2015-01-15-matpower-in-julia.md",
		"/home/jkersulis/Documents/kersulis.github.io/_posts/2015-01-16-matpower-in-julia-take-two.md",
		"/home/jkersulis/Documents/matpowerCases.jl/src/matpowerCases.jl",
		"/home/jkersulis/Documents/kersulis.github.io/README.md",
		"/home/jkersulis/Documents/matpowerCases.jl/README.md",
		"/home/jkersulis/Documents/kersulis.github.io/about.md",
		"/home/jkersulis/Documents/MatpowerCases.jl/.gitignore",
		"/home/jkersulis/Documents/Power.jl/README.md",
		"/home/jkersulis/Documents/kersulis.github.io/2015-01-16-matpower-in-julia-take-two.md",
		"/home/jkersulis/Documents/kersulis.github.io/_posts/2015-01-16-matpower-in-julia-again.md",
		"/home/jkersulis/Documents/matpowerCases.jl/REQUIRE",
		"/home/jkersulis/Documents/Power.jl/src/Power.jl",
		"/home/jkersulis/Documents/matpowerCases.jl/.gitignore",
		"/home/jkersulis/Documents/MATPOWERcases/case9Q.m",
		"/home/jkersulis/.julia/v0.3/Power/src/Power.jl",
		"/home/jkersulis/Documents/Power.jl/REQUIRE",
		"/home/jkersulis/Documents/Power.jl/RE",
		"/home/jkersulis/Documents/kersulis.github.io/_drafts/2015-01-14-cost-of-outage.md",
		"/home/jkersulis/Documents/kersulis.github.io/_posts/2015-01-14-cost-of-outage.md",
		"/home/jkersulis/Documents/kersulis.github.io/_config.yml",
		"/home/jkersulis/Documents/kersulis.github.io/cv.md",
		"/home/jkersulis/Documents/kersulis.github.io/_posts/2015-01-14-matpower-in-julia.md",
		"/home/jkersulis/Documents/kersulis.github.io/_drafts/2015-01-14-matpower-in-julia.md",
		"/home/jkersulis/Documents/updatepip.py",
		"/home/jkersulis/.ipython/kernels/julia/kernel.json"
	],
	"find":
	{
		"height": 61.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"T0",
			"function",
			"psdataload",
			"load",
			"model",
			"tmp_inst_A",
			"\\\\",
			"overflow-y",
			".map",
			"ipython.min.css.m",
			"mathjax",
			"reveal.js",
			"reveal",
			"reveal	",
			"reveal.",
			"html",
			"reveal.js",
			"Helvetica",
			"000",
			"587abc",
			"5677fc",
			"    \n",
			"G_of_x",
			"tmp_inst_A",
			"solver",
			"part",
			"trans_rotat",
			"min_norm",
			"find_w",
			"sparse",
			"start",
			"push",
			"rotation",
			"tmp_inst",
			"generate",
			"Generate",
			"generate",
			"Generate",
			"generate",
			"Generate",
			"generate",
			"Generate",
			"generate",
			"Generate",
			"generate",
			"Generate",
			"generate",
			"Generate",
			"generate",
			"generateQobj",
			"Generate",
			"generate",
			" ",
			"Params",
			"Ts",
			"*",
			"#",
			".",
			"#",
			"::Float64",
			"register",
			"widgetmodel",
			"promise",
			"registry",
			".mat",
			"c",
			"mathjax",
			"within",
			"touch",
			"]",
			"face",
			"*",
			"Step",
			"step",
			"kerne",
			"mathjax",
			"#",
			"# ",
			"       #",
			"Lines",
			"       # ",
			"#",
			"mosek",
			")\n"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/TemporalInstanton3.jl",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17780,
						"regions":
						{
						},
						"selection":
						[
							[
								6783,
								6783
							]
						],
						"settings":
						{
							"WordCountShouldRun": true,
							"WordCountSyntax": "julia",
							"_anf_new": "",
							"syntax": "Packages/Julia/Julia.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8273.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/PowerFlow.jl",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2174,
						"regions":
						{
						},
						"selection":
						[
							[
								439,
								439
							]
						],
						"settings":
						{
							"WordCountShouldRun": true,
							"WordCountSyntax": "julia",
							"_anf_new": "",
							"syntax": "Packages/Julia/Julia.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 43.0
	},
	"input":
	{
		"height": 56.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "temporal-instanton.sublime-project",
	"replace":
	{
		"height": 82.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"tempora",
				"temporal-instanton/src/TemporalInstanton2.jl"
			],
			[
				"tempo",
				"temporal-instanton/src/TemporalInstanton2.jl"
			],
			[
				"linetherm",
				"temporal-instanton/src/LineThermalModel.jl"
			],
			[
				"temporal",
				"temporal-instanton/src/TemporalInstanton2.jl"
			],
			[
				"read",
				"temporal-instanton/src/readRTS96Data.jl"
			],
			[
				"tmp",
				"temporal-instanton/src/tmp_inst_rts96.jl"
			],
			[
				"readr",
				"temporal-instanton/src/readRTS96Data.jl"
			],
			[
				"rts",
				"temporal-instanton/src/tmp_inst_rts96.jl"
			],
			[
				"psdata",
				"temporal-instanton/data/RTS-96 Data/CaseData.m"
			],
			[
				"instanton",
				"temporal-instanton/src/TemporalInstanton2.jl"
			],
			[
				"slid",
				"temporal-instanton/quals2/presentation/slides.ipynb"
			],
			[
				".m",
				"temporal-instanton/data/RTS-96 Data/CaseData.m"
			],
			[
				"4-15",
				"temporal-instanton/notes/2015-04-15-Meeting-with-Ian.md"
			],
			[
				".giit",
				"temporal-instanton/.gitignore"
			],
			[
				"pre",
				"temporal-instanton/2015-04-14-GroupPresentation/ipynb_presentation_building.md"
			],
			[
				"font",
				"temporal-instanton/2015-04-14-GroupPresentation/font-awesome-4.3.0/css/font-awesome.css"
			],
			[
				"boot",
				"temporal-instanton/2015-04-14-GroupPresentation/bootstrap-3.3.4-dist/css/bootstrap.css"
			],
			[
				"slides",
				"temporal-instanton/2015-04-14-GroupPresentation/slides.slides.html"
			],
			[
				"power",
				"temporal-instanton/paper/PowerTechPaper.tex"
			],
			[
				"ian",
				"temporal-instanton/paper/PowerTechPaper_ian.tex"
			],
			[
				"trust",
				"temporal-instanton/src/TrustRegionSubproblem.jl"
			],
			[
				"trus",
				"temporal-instanton/nbs/TrustRegionSubproblem.ipynb"
			],
			[
				"qual",
				"temporal-instanton/notes/Quals2Abstract.md"
			],
			[
				"bise",
				"4hw/code/bisection.m"
			],
			[
				"baa",
				"3hw/solution/backtracking.m"
			],
			[
				"back",
				"4hw/code/backtracking.m"
			],
			[
				"newt",
				"4hw/code/newtbt.m"
			],
			[
				"chec",
				"4hw/code/check.m"
			],
			[
				"hes",
				"4hw/code/hess.m"
			],
			[
				"check",
				"4hw/code/check.m"
			],
			[
				"new",
				"4hw/code/newtpure.m"
			],
			[
				"grad",
				"4hw/code/grad.m"
			],
			[
				"f",
				"4hw/code/f.m"
			],
			[
				"sdb",
				"4hw/code/sdbisection.m"
			],
			[
				"gra",
				"4hw/code/grad.m"
			],
			[
				"opf_exe",
				"opf_execute.m"
			],
			[
				"opf_set",
				"opf_setup.m"
			],
			[
				"opf",
				"opf.m"
			],
			[
				"dcop",
				"dcopf.m"
			],
			[
				"runpf",
				"runpf.m"
			],
			[
				"dcpf",
				"dcpf.m"
			],
			[
				"utils",
				"IPython/html/static/base/js/utils.js"
			],
			[
				"promise",
				"IPython/html/static/components/es6-promise/promise.js"
			],
			[
				"rea",
				"README.md"
			],
			[
				"abou",
				"about.md"
			],
			[
				"cos",
				"_posts/2015-01-14-cost-of-outage.md"
			],
			[
				"hea",
				"_includes/head.html"
			],
			[
				"about",
				"about.md"
			],
			[
				"mha",
				"_posts/2014-09-04-MHacks-and-the-new-term.md"
			],
			[
				"scsss",
				"_sass/_site.scss"
			],
			[
				"scss",
				"assets/css/main.scss"
			],
			[
				"page",
				"_sass/_page.scss"
			],
			[
				"main.",
				"_site/assets/css/main.css"
			],
			[
				"main",
				"_site/assets/css/main.css"
			],
			[
				"post-in",
				"_layouts/post-index.html"
			],
			[
				"css",
				"_sass/_site.scss"
			],
			[
				".css",
				"_sass/_page.scss"
			],
			[
				"post",
				"_templates/post"
			],
			[
				"assets",
				"assets/css/main.scss"
			],
			[
				"tags",
				"tags/index.html"
			],
			[
				"inde",
				"index.html"
			],
			[
				"theme",
				"theme-setup/index.md"
			],
			[
				"confi",
				"kersulis.github.io/_config.yml"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 1000.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Documents/PowerSystemDataStructure.jl/datastructure.sublime-project"
			]
		],
		"width": 760.0
	},
	"select_symbol":
	{
		"height": 64.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 784.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 405.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
