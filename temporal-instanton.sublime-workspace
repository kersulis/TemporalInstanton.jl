{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"tmp_inst",
				"tmp_inst_A_scale"
			],
			[
				"compute",
				"compute_d"
			],
			[
				"comput",
				"compute_c"
			],
			[
				"tmp_in",
				"tmp_inst_pad_b"
			],
			[
				"tmp_ins",
				"tmp_inst_b"
			],
			[
				"tmp_",
				"tmp_inst_A"
			],
			[
				"tmp_inst_",
				"tmp_inst_Qobj"
			],
			[
				"tmp_inst_A_",
				"tmp_inst_A_scale_new"
			],
			[
				"loop_th",
				"loop_through_lines_new"
			],
			[
				"theta",
				"theta	\\^theta"
			],
			[
				"tehta",
				"theta	\\theta"
			],
			[
				"solve",
				"solve_temporal_instanton"
			],
			[
				"return_",
				"return_Bhat"
			],
			[
				"tr_tran",
				"tr_trans_rotate"
			],
			[
				"temporal",
				"temporalInstanton"
			],
			[
				"tmp_inst_A",
				"tmp_inst_A_scale"
			],
			[
				"psData",
				"psDataLoad"
			],
			[
				"Float",
				"float64"
			],
			[
				"thet",
				"theta	\\^theta"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/TemporalInstanton3.jl",
			"settings":
			{
				"buffer_size": 18470,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/jkersulis/Documents/notebook/README.md",
			"settings":
			{
				"buffer_size": 833,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "# Function used to create instance of powerSystemData type from MATLAB workspace:\nfunction psDataLoad()\n    (Sb, f, t, r, x, b, Y, bustype, \n     Gp, Gq, Dp, Dq, Rp, Rq, \n     Pmax, Pmin, Qmax, Qmin, \n     Plim, Vg, Vceiling, Vfloor, \n    busIdx, N, Nr, Ng) = readRTS96Data()\n\n    # Allow each generator to participate equally in droop response.\n    # Note: this only applies to analysis types with droop response!\n    # k = zeros(length(Gp))\n    # k[find(Gp.!=0)] = 1/length(Gp)\n    \n    k = Float64[]\n    for i = 1:length(Gp)\n        if Gp[i] != 0\n            push!(k, 1/length(find(Gp)))\n        else\n            push!(k,0)\n        end\n    end\n\n    return powerSystemData(Sb,f,t,r,x,b,Y,bustype,Gp,Gq,Dp,Dq,Rp,Rq,Pmax,Pmin,Qmax,Qmin,Plim,Vg,Vceiling,Vfloor,busIdx,N,Nr,Ng,k)\nend\n\nfunction readRTS96Data()\n    # Load RTS96 data\n    # uses MAT\n    path=\"../src/caseRTS96.mat\" # Assumes current dir is nbs\n    caseRTS96 = matread(path) # import MATLAB workspace\n\n    # Connect relevant MATLAB variables to Julia\n    bus_i = caseRTS96[\"bus_i\"][:,1] # vector of unique bus indices (73)\n    bus = caseRTS96[\"bus\"][:,1] # vector of generator bus indices (99)\n    Sb = caseRTS96[\"Sb\"] # base MVA\n    bustype = caseRTS96[\"type\"][:,1]\n\n    Gp_long = caseRTS96[\"Pg\"] # conventional active power output, divide by Sb later\n    Gq_long = caseRTS96[\"Qg\"] # conventional reactive power output, divide by Sb later\n\n    Rp = (caseRTS96[\"Wind\"]./Sb)[:,1] # renewable active generation, has zero where no farm exists\n    Rq = (caseRTS96[\"Wind\"].*(0.484/Sb))[:,1]\n\n    Dp = caseRTS96[\"Pd\"]./Sb + Rp # I previously subtracted wind from active demand\n    Dp = Dp[:,1]\n    Dq = caseRTS96[\"Qd\"]./Sb # reactive power demand vector\n    Dq = Dq[:,1]\n\n    Pmax = (caseRTS96[\"Pmax\"]./Sb)[:,1] # conventional gen. max active output\n    Pmin = (caseRTS96[\"Pmin\"]./Sb)[:,1] # conventional gen. min active output\n\n    Qmax = (caseRTS96[\"Qmax\"]./Sb)[:,1] # conventional gen. max reactive output\n    Qmin = (caseRTS96[\"Qmin\"]./Sb)[:,1] # conventional gen. min reactive output\n\n    Vm = caseRTS96[\"Vm\"][:,1] # should be vector of ones\n    Va = caseRTS96[\"Va\"][:,1] # should be vector of zeros\n\n    Plim = (caseRTS96[\"rateA\"]./Sb)[:,1]\n    Vceiling = caseRTS96[\"Vmax\"][:,1] # one voltage mag. ceiling constraint per node\n    Vfloor = caseRTS96[\"Vmin\"][:,1] # one voltage mag. floor constraint per node\n\n    Vceiling[bustype .== 2] = 1 # ceiling is 1 for voltage-controlled nodes\n    Vfloor[bustype .== 2] = 1 # floor is 1 for voltage-controlled nodes\n\n    Vg = caseRTS96[\"Vg\"][:,1] # voltage magnitudes from Jenny's solved ACOPF\n\n    f = round(Int64,caseRTS96[\"fbus\"][:,1]) # \"from bus\" ...\n    t = round(Int64,caseRTS96[\"tbus\"][:,1]) # ... \"to bus\"\n    r = caseRTS96[\"r\"][:,1] # resistance, pu\n    x = caseRTS96[\"x\"][:,1] # reactance, pu\n    b = caseRTS96[\"b\"][:,1]  # susceptance, pu\n\n    # map bus numbers to 1:73\n    for i = 1:length(f)\n        if f[i] < 201\n            f[i] -= 100\n        elseif f[i] < 301\n            f[i] -= 176\n        else\n            f[i] -= 252\n        end\n    end\n    for i = 1:length(t)\n        if t[i] < 201\n            t[i] -= 100\n        elseif t[i] < 301\n            t[i] -= 176\n        else\n            t[i] -= 252\n        end\n    end\n\n    busidx = Int64[1]\n    for i = 2:length(bus)\n        # push!(busidx, bus[i] < 201 ? bus[i] - 100 : bus[i] < 301 ? bus[i] - 176 : bus[i] - 252)\n        if bus[i] < 201\n            push!(busidx, bus[i]-100)\n        elseif bus[i] < 301\n            push!(busidx, bus[i]-176)\n        else\n            push!(busidx, bus[i]-252)\n        end\n    end\n\n    # area 1: buses 1-24\n    # area 2: buses 25-48\n    # area 3: buses 49-73\n\n    Gp = zeros(length(bus_i))\n    Gq = zeros(length(bus_i))\n\n    for i in unique(busidx)\n        Gp[i] = sum(Gp_long[find(busidx .== i)])/Sb\n        Gq[i] = sum(Gq_long[find(busidx .== i)])/Sb\n    end\n    # Now Gp and Gq reflect active and reactive generation at buses 1:73 consecutively.\n\n    N = length(bus_i)\n    Nr = length(find(Rp))\n    Ng = length(find(Gp))\n\n    Y = createY(f,t,r,x,b,true)\n\n    return  Sb, f, t, r, x, b, Y, bustype, \n            Gp, Gq, Dp, Dq, Rp, Rq, \n            Pmax, Pmin, Qmax, Qmin, \n            Plim, Vg, Vceiling, Vfloor, \n            bus_i, N, Nr, Ng\nend",
			"file": "src/readRTS96Data.jl",
			"file_size": 4083,
			"file_write_time": 130810263952815006,
			"settings":
			{
				"buffer_size": 4251,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "  count  time(%)   time(s) bytes(%) bytes(k)\n     208   0.00   0.000021   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 247, @mstr \" Return A1, A2, A3 where:\\n    * A1 corresponds to wind\\n    * A2 corresponds to angles + mismatch\\n    * A3 corresponds to angle difference vars\\n\\n    Used to find x_star, the min-norm solution to\\n    Ax=b such that x_star[idx3] = 0.\\n    \"\n     208   0.00   0.000010   0.00         0  	# line 255, (m,n) = size(A)\n     208   0.00   0.007653   0.00      1160  	# line 256, idx1 = find(diag(Qobj))\n     208   0.02   0.097238   0.01      8392  	# line 257, idx2 = setdiff(1:n - T,idx1)\n     208   0.00   0.000010   0.00         0  	# line 258, idx3 = (n - T) + 1:n\n     208   0.00   0.006648   0.00      1103  	# line 259, idx = [idx1,idx2,idx3]\n     208   0.00   0.018495   0.06     80899  	# line 261, A1 = A[:,idx1]\n     208   0.07   0.396606   0.25    332496  	# line 262, A2 = A[:,idx2]\n     208   0.00   0.001844   0.00      4509  	# line 263, A3 = A[:,idx3]\n     208   0.00   0.000071   0.00        18  	# line 264, return (A1,A2,A3,idx1,idx2,idx3)\n     104   0.00   0.000006   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 268, @mstr \" x_star is the vector by which the problem must\\n    be translated in the first step of the temporal\\n    instanton QCQP solution.\\n\\n    x_star is chosen to be the point in the set Ax=b\\n    nearest to the origin such that x_star[idx3] = 0.\\n    This condition ensures no linear term is introduced\\n    into the quadratic constraint.\\n    \"\n     104   0.07   0.415004   0.16    214288  	# line 277, (A1,A2,A3,idx1,idx2,idx3) = partition_A(A,Qobj,T)\n     104   0.00   0.000201   0.00       471  	# line 278, x_star = zeros(size(A,2))\n     104  94.67  538.710970  94.69  124301967  	# line 279, x_star[[idx1,idx2]] = [A1 A2] \\ b\n     104   0.00   0.000003   0.00         0  	# line 280, return x_star\n     208   0.00   0.000007   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 284, @mstr \" This function performs the change of variables from x to z,\\n    where z = x - x_star. (For translating a quadratic problem.)\\n    Returns triple H_of_x consisting of matrix H, vector h, constant kh.\\n\\n    Arguments\\n    G_of_x consists of matrix G, vector g, constant kg.\\n    x_star is translation.\\n\\n    Used to perform second step of temporal instanton solution method,\\n    assuming x_star is min-norm solution of Ax=b.\\n    \"\n     208   0.00   0.000013   0.00         0  	# line 295, (G,g,kg) = G_of_x\n     208   0.00   0.008100   0.00      1271  	# line 297, g = zeros(size(G,1),1)\n     208   0.00   0.000008   0.00         0  	# line 299, H = G\n     208   0.15   0.826605   0.40    520048  	# line 300, h = g + 2 * G * x_star\n     208   0.10   0.557708   0.02     28449  	# line 301, kh = kg + x_star' * G * x_star + g' * x_star\n     208   0.00   0.000284   0.00        12  	# line 302, return (H,h,kh[1])\n     104   0.00   0.000005   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 306, @mstr \" Find an orthonormal basis for the nullspace of A.\\n    This matrix may be used to rotate a temporal instanton\\n    problem instance to eliminate all but nullity(A) elements.\\n    \"\n     104   0.00   0.000005   0.00         0  	# line 310, (m,n) = size(A)\n     104   1.56   8.872381   0.18    239716  	# line 311, dim_N = n - rank(A)\n     104   0.90   5.132271   0.82   1081692  	# line 314, q = (qr(A'; thin=false))[1]\n     104   0.20   1.140640   0.20    261949  	# line 315, R = circshift(q,(0,dim_N))\n     104   0.00   0.000006   0.00         0  	# line 316, return R\n     416   0.00   0.000040   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 320, @mstr \" Rotate quadratic G_of_x by\\n    rotation matrix R.\\n    \"\n     416   0.00   0.000024   0.00         0  	# line 323, (G,g,kg) = G_of_x\n     416   0.25   1.429353   0.21    278757  	# line 324, return (R * G * R',R * g,kg)\n     104   0.00   0.000017   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 328, @mstr \" Return K, the diagonal matrix whose elements are\\n    square roots of eigenvalues of the given matrix D.\\n    \"\n     104   0.00   0.000043   0.00       106  	# line 331, K = ones(length(D))\n     104   0.00   0.001195   0.00        75  	# line 332, K[find(D)] = sqrt(D[find(D)])\n     104   0.00   0.005441   0.01     10596  	# line 333, return diagm(K)\n     104   0.00   0.000007   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 337, (B,b) = (G_of_w[1],G_of_w[2])\n     104   0.01   0.042432   0.01     10109  	# line 338, Q = round(Q_of_w[1])\n     104   0.00   0.000965   0.00       121  	# line 339, i2 = find(diag(Q))\n     104   0.00   0.011169   0.00       901  	# line 340, i1 = setdiff(1:size(Q,1),i2)\n     104   0.00   0.004336   0.01      9759  	# line 341, (B11,B12,B21,B22) = (B[i1,i1],B[i1,i2],B[i2,i1],B[i2,i2])\n     104   0.00   0.004782   0.00       262  	# line 342, b1 = b[i1]\n     104   0.00   0.000039   0.00        10  	# line 343, b2 = b[i2]\n     104   0.00   0.000019   0.00         7  	# line 344, return (B11,B12,B21,B22,b1,b2)\n     104   0.13   0.726810   0.01     19562  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 348, Bhat = B22 - (B12' / B11) * B12\n     104   0.06   0.344746   0.01     19512  	# line 349, bhat = b2 - (B12' / B11) * b1\n     104   0.00   0.000420   0.00       113  	# line 350, return (round(Bhat,10),bhat)\n     104   0.00   0.000033   0.00        10  	# line 355, w = float($(Expr(:comprehension, :(-(d[i]) / D[i,i]), :(i = 1:length(d)))))\n   29439   0.00   0.003972   0.00      2826  	# line 357, w = float($(Expr(:comprehension, :(d[i] / (v - D[i,i])), :(i = 1:length(d)))))\n   29543   0.00   0.000714   0.00         0  	# line 359, return w\n     104   0.00   0.000007   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 363, @mstr \" Solve the secular equation via binary search.\\n    \"\n     104   0.00   0.000006   0.00         0  	# line 365, eps = 1.0e-8\n     104   0.00   0.000049   0.00         5  	# line 366, solutions = Float64[]\n     104   0.00   0.000061   0.00         5  	# line 367, vectors = Array(Vector{Float64},0)\n     104   0.00   0.025525   0.00       258  	# line 368, poles = sort(unique(round(diag(D),10)))\n     624   0.00   0.000038   0.00         0  	# line 374, high = poles[i]\n     104   0.00   0.000026   0.00         0  	# line 378, low = high - abs(poles[i] - poles[i + 1])\n     520   0.00   0.000022   0.00         0  	# line 380, low = high - abs(poles[i] - poles[i - 1]) / 2\n     624   0.00   0.000019   0.00         0  	# line 384, v = (high + low) / 2\n     624   0.00   0.000324   0.00        70  	# line 385, w = find_w(v,D,d)\n     624   0.00   0.000116   0.00        50  	# line 386, diff = (w' * w)[1] - c\n     624   0.00   0.000019   0.00         0  	# line 387, diff_old = 0\n     624   0.00   0.000018   0.00         0  	# line 388, stall = false\n      26   0.00   0.000003   0.00         0  	# line 391, stall = true\n    7151   0.00   0.000715   0.00       114  	# line 395, high = v\n    6725   0.00   0.000781   0.00       108  	# line 397, low = v\n   13876   0.00   0.000356   0.00         0  	# line 399, v = (high + low) / 2\n   13876   0.00   0.005782   0.00      1554  	# line 400, w = find_w(v,D,d)\n   13876   0.00   0.000483   0.00       222  	# line 401, diff_old = diff\n   13876   0.00   0.002252   0.00      1110  	# line 402, diff = (w' * w)[1] - c\n     598   0.00   0.000079   0.00        25  	# line 405, push!(solutions,v)\n     598   0.00   0.000097   0.00        25  	# line 406, push!(vectors,w)\n     624   0.00   0.000030   0.00         0  	# line 410, high = poles[i]\n     104   0.00   0.000007   0.00         0  	# line 414, low = high + abs(poles[i] - poles[i - 1])\n     520   0.00   0.000038   0.00         0  	# line 416, low = high + abs(poles[i] - poles[i + 1]) / 2\n     624   0.00   0.000020   0.00         0  	# line 419, v = (high + low) / 2\n     624   0.00   0.000279   0.00        70  	# line 420, w = find_w(v,D,d)\n     624   0.00   0.000111   0.00        50  	# line 421, diff = (w' * w)[1] - c\n     624   0.00   0.000019   0.00         0  	# line 422, diff_old = 0\n     624   0.00   0.000018   0.00         0  	# line 423, stall = false\n      20   0.00   0.000003   0.00         0  	# line 426, stall = true\n    6955   0.00   0.000702   0.00       111  	# line 430, high = v\n    7360   0.00   0.000724   0.00       118  	# line 432, low = v\n   14315   0.00   0.000375   0.00         0  	# line 434, v = (high + low) / 2\n   14315   0.00   0.005945   0.00      1603  	# line 435, w = find_w(v,D,d)\n   14315   0.00   0.000503   0.00       229  	# line 436, diff_old = diff\n   14315   0.00   0.002248   0.00      1145  	# line 437, diff = (w' * w)[1] - c\n     604   0.00   0.000043   0.00         1  	# line 440, push!(solutions,v)\n     604   0.00   0.000036   0.00         1  	# line 441, push!(vectors,w)\n     104   0.00   0.000008   0.00         3  	# line 444, return (solutions,vectors)\n    1202   0.00   0.000102   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 448, @mstr \" Reverse rotations and translations to map\\n    secular equation solution back to original problem\\n    space.\\n    \"\n    1202   0.63   3.566420   0.16    205590  	# line 452, w1opt = -B11 \\ (B12 * w2opt + b1 / 2)\n    1202   0.00   0.000835   0.00      1231  	# line 453, wopt = [w1opt,w2opt]\n    1202   1.17   6.631476   2.76   3626078  	# line 454, xopt = ((N * U) / K) * wopt + x_star\n    1202   0.00   0.000049   0.00         0  	# line 455, return xopt",
			"settings":
			{
				"buffer_size": 10437,
				"line_ending": "Unix",
				"name": "count  time(%)   time(s) bytes(%) bytes(k)"
			}
		},
		{
			"contents": "  count  time(%)   time(s) bytes(%) bytes(k)\n     208   0.00   0.000022   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 247, @mstr \" Return A1, A2, A3 where:\\n    * A1 corresponds to wind\\n    * A2 corresponds to angles + mismatch\\n    * A3 corresponds to angle difference vars\\n\\n    Used to find x_star, the min-norm solution to\\n    Ax=b such that x_star[idx3] = 0.\\n    \"\n     208   0.00   0.000008   0.00         0  	# line 255, (m,n) = size(A)\n     208   0.02   0.005097   0.01      1160  	# line 256, idx1 = find(diag(Qobj))\n     208   0.58   0.137919   0.10      8392  	# line 257, idx2 = setdiff(1:n - T,idx1)\n     208   0.00   0.000009   0.00         0  	# line 258, idx3 = (n - T) + 1:n\n     208   0.03   0.005974   0.01      1103  	# line 259, idx = [idx1,idx2,idx3]\n     208   0.07   0.016212   1.01     80899  	# line 261, A1 = A[:,idx1]\n     208   0.48   0.113810   4.15    332495  	# line 262, A2 = A[:,idx2]\n     208   0.01   0.001682   0.06      4509  	# line 263, A3 = A[:,idx3]\n     208   0.27   0.062891   0.00        18  	# line 264, return (A1,A2,A3,idx1,idx2,idx3)\n     104   0.00   0.000006   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 268, @mstr \" x_star is the vector by which the problem must\\n    be translated in the first step of the temporal\\n    instanton QCQP solution.\\n\\n    x_star is chosen to be the point in the set Ax=b\\n    nearest to the origin such that x_star[idx3] = 0.\\n    This condition ensures no linear term is introduced\\n    into the quadratic constraint.\\n    \"\n     104   0.96   0.227170   2.67    214288  	# line 277, (A1,A2,A3,idx1,idx2,idx3) = partition_A(A,Qobj,T)\n     104   0.00   0.000290   0.01       471  	# line 278, x_star = zeros(size(A,2))\n     104   5.34   1.266376   5.23    419284  	# line 279, Z = sparse([A1 A2]')\n     104  11.13   2.640156   7.79    624261  	# line 280, x_star[[idx1,idx2]] = (Z / (Z' * Z)) * b\n     104   0.00   0.000006   0.00         0  	# line 281, return x_star\n     208   0.00   0.000012   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 285, @mstr \" This function performs the change of variables from x to z,\\n    where z = x - x_star. (For translating a quadratic problem.)\\n    Returns triple H_of_x consisting of matrix H, vector h, constant kh.\\n\\n    Arguments\\n    G_of_x consists of matrix G, vector g, constant kg.\\n    x_star is translation.\\n\\n    Used to perform second step of temporal instanton solution method,\\n    assuming x_star is min-norm solution of Ax=b.\\n    \"\n     208   0.00   0.000021   0.00         0  	# line 296, (G,g,kg) = G_of_x\n     208   0.04   0.008628   0.02      1269  	# line 298, g = zeros(size(G,1),1)\n     208   0.00   0.000008   0.00         0  	# line 300, H = G\n     208   2.93   0.696133   6.49    520049  	# line 301, h = g + 2 * G * x_star\n     208   2.30   0.545003   0.36     28449  	# line 302, kh = kg + x_star' * G * x_star + g' * x_star\n     208   0.00   0.000285   0.00        12  	# line 303, return (H,h,kh[1])\n     104   0.00   0.000005   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 307, @mstr \" Find an orthonormal basis for the nullspace of A.\\n    This matrix may be used to rotate a temporal instanton\\n    problem instance to eliminate all but nullity(A) elements.\\n    \"\n     104   0.00   0.000005   0.00         0  	# line 311, (m,n) = size(A)\n     104  20.66   4.900131   2.99    239716  	# line 312, dim_N = n - rank(A)\n     104  18.43   4.371692  13.51   1082740  	# line 315, q = (qr(A'; thin=false))[1]\n     104   1.08   0.256161   3.27    261949  	# line 316, R = circshift(q,(0,dim_N))\n     104   0.00   0.000006   0.00         0  	# line 317, return R\n     416   0.00   0.000044   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 321, @mstr \" Rotate quadratic G_of_x by\\n    rotation matrix R.\\n    \"\n     416   0.00   0.000024   0.00         0  	# line 324, (G,g,kg) = G_of_x\n     416   4.37   1.037023   3.48    278757  	# line 325, return (R * G * R',R * g,kg)\n     104   0.00   0.000016   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 329, @mstr \" Return K, the diagonal matrix whose elements are\\n    square roots of eigenvalues of the given matrix D.\\n    \"\n     104   0.00   0.000046   0.00       106  	# line 332, K = ones(length(D))\n     104   0.01   0.001191   0.00        75  	# line 333, K[find(D)] = sqrt(D[find(D)])\n     104   0.02   0.005743   0.13     10596  	# line 334, return diagm(K)\n     104   0.00   0.000007   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 338, (B,b) = (G_of_w[1],G_of_w[2])\n     104   0.19   0.044247   0.13     10109  	# line 339, Q = round(Q_of_w[1])\n     104   0.01   0.001214   0.00       121  	# line 340, i2 = find(diag(Q))\n     104   0.05   0.011477   0.01       901  	# line 341, i1 = setdiff(1:size(Q,1),i2)\n     104   0.02   0.004981   0.12      9759  	# line 342, (B11,B12,B21,B22) = (B[i1,i1],B[i1,i2],B[i2,i1],B[i2,i2])\n     104   0.03   0.007365   0.00       262  	# line 343, b1 = b[i1]\n     104   0.00   0.000041   0.00        10  	# line 344, b2 = b[i2]\n     104   0.00   0.000018   0.00         7  	# line 345, return (B11,B12,B21,B22,b1,b2)\n     104   0.61   0.144809   0.24     19562  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 349, Bhat = B22 - (B12' / B11) * B12\n     104   0.65   0.155270   0.24     19512  	# line 350, bhat = b2 - (B12' / B11) * b1\n     104   0.00   0.000362   0.00       113  	# line 351, return (round(Bhat,10),bhat)\n     104   0.00   0.000032   0.00        10  	# line 356, w = float($(Expr(:comprehension, :(-(d[i]) / D[i,i]), :(i = 1:length(d)))))\n   29436   0.02   0.003787   0.04      2826  	# line 358, w = float($(Expr(:comprehension, :(d[i] / (v - D[i,i])), :(i = 1:length(d)))))\n   29540   0.00   0.000767   0.00         0  	# line 360, return w\n     104   0.00   0.000006   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 364, @mstr \" Solve the secular equation via binary search.\\n    \"\n     104   0.00   0.000005   0.00         0  	# line 366, eps = 1.0e-8\n     104   0.00   0.000049   0.00         5  	# line 367, solutions = Float64[]\n     104   0.00   0.000058   0.00         5  	# line 368, vectors = Array(Vector{Float64},0)\n     104   0.11   0.025189   0.00       258  	# line 369, poles = sort(unique(round(diag(D),10)))\n     624   0.00   0.000034   0.00         0  	# line 375, high = poles[i]\n     104   0.00   0.000019   0.00         0  	# line 379, low = high - abs(poles[i] - poles[i + 1])\n     520   0.00   0.000022   0.00         0  	# line 381, low = high - abs(poles[i] - poles[i - 1]) / 2\n     624   0.00   0.000018   0.00         0  	# line 385, v = (high + low) / 2\n     624   0.00   0.000322   0.00        70  	# line 386, w = find_w(v,D,d)\n     624   0.00   0.000112   0.00        50  	# line 387, diff = (w' * w)[1] - c\n     624   0.00   0.000019   0.00         0  	# line 388, diff_old = 0\n     624   0.00   0.000018   0.00         0  	# line 389, stall = false\n      26   0.00   0.000003   0.00         0  	# line 392, stall = true\n    7149   0.00   0.000715   0.00       114  	# line 396, high = v\n    6725   0.00   0.000762   0.00       108  	# line 398, low = v\n   13874   0.00   0.000345   0.00         0  	# line 400, v = (high + low) / 2\n   13874   0.02   0.005764   0.02      1554  	# line 401, w = find_w(v,D,d)\n   13874   0.00   0.000486   0.00       222  	# line 402, diff_old = diff\n   13874   0.01   0.002120   0.01      1110  	# line 403, diff = (w' * w)[1] - c\n     598   0.00   0.000082   0.00        25  	# line 406, push!(solutions,v)\n     598   0.00   0.000097   0.00        25  	# line 407, push!(vectors,w)\n     624   0.00   0.000028   0.00         0  	# line 411, high = poles[i]\n     104   0.00   0.000006   0.00         0  	# line 415, low = high + abs(poles[i] - poles[i - 1])\n     520   0.00   0.000039   0.00         0  	# line 417, low = high + abs(poles[i] - poles[i + 1]) / 2\n     624   0.00   0.000018   0.00         0  	# line 420, v = (high + low) / 2\n     624   0.00   0.000312   0.00        70  	# line 421, w = find_w(v,D,d)\n     624   0.00   0.000105   0.00        50  	# line 422, diff = (w' * w)[1] - c\n     624   0.00   0.000018   0.00         0  	# line 423, diff_old = 0\n     624   0.00   0.000018   0.00         0  	# line 424, stall = false\n      20   0.00   0.000003   0.00         0  	# line 427, stall = true\n    6954   0.00   0.000687   0.00       111  	# line 431, high = v\n    7360   0.00   0.000717   0.00       118  	# line 433, low = v\n   14314   0.00   0.000353   0.00         0  	# line 435, v = (high + low) / 2\n   14314   0.02   0.005928   0.02      1603  	# line 436, w = find_w(v,D,d)\n   14314   0.00   0.000490   0.00       229  	# line 437, diff_old = diff\n   14314   0.01   0.002155   0.01      1145  	# line 438, diff = (w' * w)[1] - c\n     604   0.00   0.000045   0.00         1  	# line 441, push!(solutions,v)\n     604   0.00   0.000037   0.00         1  	# line 442, push!(vectors,w)\n     104   0.00   0.000011   0.00         3  	# line 445, return (solutions,vectors)\n    1202   0.00   0.000061   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 449, @mstr \" Reverse rotations and translations to map\\n    secular equation solution back to original problem\\n    space.\\n    \"\n    1202   5.45   1.293440   2.57    205590  	# line 453, w1opt = -B11 \\ (B12 * w2opt + b1 / 2)\n    1202   0.00   0.000878   0.02      1231  	# line 454, wopt = [w1opt,w2opt]\n    1202  24.06   5.707597  45.25   3626078  	# line 455, xopt = ((N * U) / K) * wopt + x_star\n    1202   0.00   0.000040   0.00         0  	# line 456, return xopt",
			"settings":
			{
				"buffer_size": 10521,
				"line_ending": "Unix",
				"name": "count  time(%)   time(s) bytes(%) bytes(k)"
			}
		},
		{
			"contents": "  count  time(%)   time(s) bytes(%) bytes(k)\n     208   0.00   0.000029   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 247, @mstr \" Return A1, A2, A3 where:\\n    * A1 corresponds to wind\\n    * A2 corresponds to angles + mismatch\\n    * A3 corresponds to angle difference vars\\n\\n    Used to find x_star, the min-norm solution to\\n    Ax=b such that x_star[idx3] = 0.\\n    \"\n     208   0.00   0.000008   0.00         0  	# line 255, (m,n) = size(A)\n     208   0.03   0.004984   0.01      1160  	# line 256, idx1 = find(diag(Qobj))\n     208   0.96   0.171217   0.10      8392  	# line 257, idx2 = setdiff(1:n - T,idx1)\n     208   0.00   0.000008   0.00         0  	# line 258, idx3 = (n - T) + 1:n\n     208   0.03   0.005691   0.01      1103  	# line 259, idx = [idx1,idx2,idx3]\n     208   0.09   0.015954   1.00     80899  	# line 261, A1 = A[:,idx1]\n     208   0.97   0.172336   4.11    332496  	# line 262, A2 = A[:,idx2]\n     208   0.28   0.049628   0.06      4509  	# line 263, A3 = A[:,idx3]\n     208   0.00   0.000066   0.00        18  	# line 264, return (A1,A2,A3,idx1,idx2,idx3)\n     104   0.00   0.000005   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 268, @mstr \" x_star is the vector by which the problem must\\n    be translated in the first step of the temporal\\n    instanton QCQP solution.\\n\\n    x_star is chosen to be the point in the set Ax=b\\n    nearest to the origin such that x_star[idx3] = 0.\\n    This condition ensures no linear term is introduced\\n    into the quadratic constraint.\\n    \"\n     104   1.27   0.227003   2.65    214288  	# line 277, (A1,A2,A3,idx1,idx2,idx3) = partition_A(A,Qobj,T)\n     104   0.00   0.000253   0.01       471  	# line 278, x_star = zeros(size(A,2))\n     104   6.48   1.156407   5.19    419284  	# line 279, Z = sparse([A1 A2]')\n     104  12.04   2.147659   7.72    624265  	# line 280, x_star[[idx1,idx2]] = (Z / (Z' * Z)) * b\n     104   0.00   0.000005   0.00         0  	# line 281, return x_star\n     208   0.00   0.000013   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 285, @mstr \" This function performs the change of variables from x to z,\\n    where z = x - x_star. (For translating a quadratic problem.)\\n    Returns triple H_of_x consisting of matrix H, vector h, constant kh.\\n\\n    Arguments\\n    G_of_x consists of matrix G, vector g, constant kg.\\n    x_star is translation.\\n\\n    Used to perform second step of temporal instanton solution method,\\n    assuming x_star is min-norm solution of Ax=b.\\n    \"\n     208   0.00   0.000025   0.00         0  	# line 296, (G,g,kg) = G_of_x\n     208   0.05   0.008145   0.02      1274  	# line 298, g = zeros(size(G,1),1)\n     208   0.00   0.000009   0.00         0  	# line 300, H = G\n     208   5.26   0.938621   6.43    520048  	# line 301, h = g + 2 * G * x_star\n     208   0.91   0.162531   0.03      2556  	# line 302, kh = kg + x_star' * G * x_star + g' * x_star\n     208   0.00   0.000273   0.00        12  	# line 303, return (H,h,kh[1])\n     104   0.00   0.000005   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 307, @mstr \" Find an orthonormal basis for the nullspace of A.\\n    This matrix may be used to rotate a temporal instanton\\n    problem instance to eliminate all but nullity(A) elements.\\n    \"\n     104   0.00   0.000005   0.00         0  	# line 311, (m,n) = size(A)\n     104   5.83   1.040550   4.17    337012  	# line 315, dim_N = n - m\n     104  24.89   4.439220  13.39   1082742  	# line 320, q = (qr(A'; thin=false))[1]\n     104   1.45   0.259282   3.24    261949  	# line 321, R = circshift(q,(0,dim_N))\n     104   0.00   0.000006   0.00         0  	# line 322, return R\n     416   0.00   0.000042   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 326, @mstr \" Rotate quadratic G_of_x by\\n    rotation matrix R.\\n    \"\n     416   0.00   0.000028   0.00         0  	# line 329, (G,g,kg) = G_of_x\n     416   4.67   0.832682   3.45    278757  	# line 330, return (R * G * R',R * g,kg)\n     104   0.00   0.000014   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 334, @mstr \" Return K, the diagonal matrix whose elements are\\n    square roots of eigenvalues of the given matrix D.\\n    \"\n     104   0.00   0.000040   0.00       106  	# line 337, K = ones(length(D))\n     104   0.01   0.001107   0.00        75  	# line 338, K[find(D)] = sqrt(D[find(D)])\n     104   0.03   0.005114   0.13     10596  	# line 339, return diagm(K)\n     104   0.00   0.000006   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 343, (B,b) = (G_of_w[1],G_of_w[2])\n     104   0.24   0.042869   0.13     10109  	# line 344, Q = round(Q_of_w[1])\n     104   0.01   0.001201   0.00       121  	# line 345, i2 = find(diag(Q))\n     104   0.06   0.010852   0.01       901  	# line 346, i1 = setdiff(1:size(Q,1),i2)\n     104   0.03   0.004693   0.12      9759  	# line 347, (B11,B12,B21,B22) = (B[i1,i1],B[i1,i2],B[i2,i1],B[i2,i2])\n     104   0.04   0.007562   0.00       262  	# line 348, b1 = b[i1]\n     104   0.00   0.000040   0.00        10  	# line 349, b2 = b[i2]\n     104   0.00   0.000023   0.00         7  	# line 350, return (B11,B12,B21,B22,b1,b2)\n     104   0.15   0.026227   0.24     19562  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 354, Bhat = B22 - (B12' / B11) * B12\n     104   0.13   0.023582   0.24     19512  	# line 355, bhat = b2 - (B12' / B11) * b1\n     104   0.00   0.000343   0.00       113  	# line 356, return (round(Bhat,10),bhat)\n     104   0.00   0.000033   0.00        10  	# line 361, w = float($(Expr(:comprehension, :(-(d[i]) / D[i,i]), :(i = 1:length(d)))))\n   29436   0.02   0.003731   0.03      2826  	# line 363, w = float($(Expr(:comprehension, :(d[i] / (v - D[i,i])), :(i = 1:length(d)))))\n   29540   0.00   0.000732   0.00         0  	# line 365, return w\n     104   0.00   0.000007   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 369, @mstr \" Solve the secular equation via binary search.\\n    \"\n     104   0.00   0.000006   0.00         0  	# line 371, eps = 1.0e-8\n     104   0.00   0.000050   0.00         5  	# line 372, solutions = Float64[]\n     104   0.00   0.000053   0.00         5  	# line 373, vectors = Array(Vector{Float64},0)\n     104   0.15   0.026317   0.00       258  	# line 374, poles = sort(unique(round(diag(D),10)))\n     624   0.00   0.000036   0.00         0  	# line 380, high = poles[i]\n     104   0.00   0.000016   0.00         0  	# line 384, low = high - abs(poles[i] - poles[i + 1])\n     520   0.00   0.000019   0.00         0  	# line 386, low = high - abs(poles[i] - poles[i - 1]) / 2\n     624   0.00   0.000018   0.00         0  	# line 390, v = (high + low) / 2\n     624   0.00   0.000307   0.00        70  	# line 391, w = find_w(v,D,d)\n     624   0.00   0.000104   0.00        50  	# line 392, diff = (w' * w)[1] - c\n     624   0.00   0.000018   0.00         0  	# line 393, diff_old = 0\n     624   0.00   0.000017   0.00         0  	# line 394, stall = false\n      26   0.00   0.000003   0.00         0  	# line 397, stall = true\n    7149   0.00   0.000664   0.00       114  	# line 401, high = v\n    6725   0.00   0.000744   0.00       108  	# line 403, low = v\n   13874   0.00   0.000337   0.00         0  	# line 405, v = (high + low) / 2\n   13874   0.03   0.005608   0.02      1554  	# line 406, w = find_w(v,D,d)\n   13874   0.00   0.000457   0.00       222  	# line 407, diff_old = diff\n   13874   0.01   0.002039   0.01      1110  	# line 408, diff = (w' * w)[1] - c\n     598   0.00   0.000085   0.00        25  	# line 411, push!(solutions,v)\n     598   0.00   0.000095   0.00        25  	# line 412, push!(vectors,w)\n     624   0.00   0.000027   0.00         0  	# line 416, high = poles[i]\n     104   0.00   0.000005   0.00         0  	# line 420, low = high + abs(poles[i] - poles[i - 1])\n     520   0.00   0.000040   0.00         0  	# line 422, low = high + abs(poles[i] - poles[i + 1]) / 2\n     624   0.00   0.000018   0.00         0  	# line 425, v = (high + low) / 2\n     624   0.00   0.000261   0.00        70  	# line 426, w = find_w(v,D,d)\n     624   0.00   0.000095   0.00        50  	# line 427, diff = (w' * w)[1] - c\n     624   0.00   0.000017   0.00         0  	# line 428, diff_old = 0\n     624   0.00   0.000016   0.00         0  	# line 429, stall = false\n      20   0.00   0.000002   0.00         0  	# line 432, stall = true\n    6954   0.00   0.000644   0.00       111  	# line 436, high = v\n    7360   0.00   0.000684   0.00       118  	# line 438, low = v\n   14314   0.00   0.000345   0.00         0  	# line 440, v = (high + low) / 2\n   14314   0.03   0.005777   0.02      1603  	# line 441, w = find_w(v,D,d)\n   14314   0.00   0.000478   0.00       229  	# line 442, diff_old = diff\n   14314   0.01   0.002050   0.01      1145  	# line 443, diff = (w' * w)[1] - c\n     604   0.00   0.000044   0.00         1  	# line 446, push!(solutions,v)\n     604   0.00   0.000034   0.00         1  	# line 447, push!(vectors,w)\n     104   0.00   0.000008   0.00         3  	# line 450, return (solutions,vectors)\n    1202   0.00   0.000051   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 454, @mstr \" Reverse rotations and translations to map\\n    secular equation solution back to original problem\\n    space.\\n    \"\n    1202   4.89   0.871990   2.54    205590  	# line 458, w1opt = -B11 \\ (B12 * w2opt + b1 / 2)\n    1202   0.00   0.000693   0.02      1231  	# line 459, wopt = [w1opt,w2opt]\n    1202  28.89   5.152172  44.85   3626078  	# line 460, xopt = ((N * U) / K) * wopt + x_star\n    1202   0.00   0.000040   0.00         0  	# line 461, return xopt",
			"settings":
			{
				"buffer_size": 10515,
				"line_ending": "Unix",
				"name": "count  time(%)   time(s) bytes(%) bytes(k)"
			}
		},
		{
			"contents": "  count  time(%)   time(s) bytes(%) bytes(k)\n     104   0.00   0.000020   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 247, @mstr \" Return A1, A2, A3 where:\\n    * A1 corresponds to wind\\n    * A2 corresponds to angles + mismatch\\n    * A3 corresponds to angle difference vars\\n\\n    Used to find x_star, the min-norm solution to\\n    Ax=b such that x_star[idx3] = 0.\\n    \"\n     104   0.00   0.000006   0.00         0  	# line 255, (m,n) = size(A)\n     104   0.02   0.002656   0.01       580  	# line 256, idx1 = find(diag(Qobj))\n     104   0.22   0.038414   0.05      4196  	# line 257, idx2 = setdiff(1:n - T,idx1)\n     104   0.00   0.000006   0.00         0  	# line 258, idx3 = (n - T) + 1:n\n     104   0.24   0.040908   2.70    206697  	# line 260, (A1,A2) = (A[:,idx1],A[:,idx2])\n     104   3.06   0.525135   0.00         8  	# line 261, return (A1,A2,idx1,idx2,idx3)\n     104   0.00   0.000006   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 265, @mstr \" x_star is the n-vector by which the problem must\\n    be translated in the first step of the temporal\\n    instanton QCQP solution.\\n\\n    x_star is chosen to be the point in the set Ax=b\\n    nearest to the origin such that x_star[idx3] = 0.\\n    This condition ensures no linear term is introduced\\n    into the quadratic constraint.\\n    \"\n     104   0.01   0.001329   0.01       471  	# line 274, x_star = zeros(n)\n     104   2.50   0.429332   5.48    419284  	# line 275, Z = sparse([A1 A2]')\n     104  16.26   2.792422   8.16    624261  	# line 276, x_star[[idx1,idx2]] = (Z / (Z' * Z)) * b\n     104   0.00   0.000006   0.00         0  	# line 277, return x_star\n     208   0.00   0.000010   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 281, @mstr \" This function performs the change of variables from x to z,\\n    where z = x - x_star. (For translating a quadratic problem.)\\n    Returns triple H_of_x consisting of matrix H, vector h, constant kh.\\n\\n    Arguments\\n    G_of_x consists of matrix G, vector g, constant kg.\\n    x_star is translation.\\n\\n    Used to perform second step of temporal instanton solution method,\\n    assuming x_star is min-norm solution of Ax=b.\\n    \"\n     208   0.00   0.000016   0.00         0  	# line 292, (G,g,kg) = G_of_x\n     208   0.05   0.008038   0.02      1270  	# line 294, g = zeros(size(G,1),1)\n     208   0.00   0.000010   0.00         0  	# line 296, H = G\n     208   2.62   0.450649   6.79    520048  	# line 297, h = g + 2 * G * x_star\n     208   0.98   0.168697   0.03      2556  	# line 298, kh = kg + x_star' * G * x_star + g' * x_star\n     208   0.00   0.000312   0.00        12  	# line 299, return (H,h,kh[1])\n     104   0.00   0.000005   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 303, @mstr \" Find an orthonormal basis for the nullspace of A.\\n    This matrix may be used to rotate a temporal instanton\\n    problem instance to eliminate all but nullity(A) elements.\\n    \"\n     104   0.00   0.000006   0.00         0  	# line 307, (m,n) = size(A)\n     104   7.79   1.337268   4.40    337012  	# line 311, dim_N = n - m\n     104  23.07   3.961490  14.15   1082774  	# line 316, q = (qr(A'; thin=false))[1]\n     104   0.85   0.145682   3.42    261949  	# line 317, R = circshift(q,(0,dim_N))\n     104   0.00   0.000006   0.00         0  	# line 318, return R\n     416   0.00   0.000040   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 322, @mstr \" Rotate quadratic G_of_x by\\n    rotation matrix R.\\n    \"\n     416   0.00   0.000027   0.00         0  	# line 325, (G,g,kg) = G_of_x\n     416   7.03   1.207378   3.64    278757  	# line 326, return (R * G * R',R * g,kg)\n     104   0.00   0.000014   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 330, @mstr \" Return K, the diagonal matrix whose elements are\\n    square roots of eigenvalues of the given matrix D.\\n    \"\n     104   0.00   0.000044   0.00       106  	# line 333, K = ones(length(D))\n     104   0.01   0.001201   0.00        75  	# line 334, K[find(D)] = sqrt(D[find(D)])\n     104   0.03   0.005393   0.14     10596  	# line 335, return diagm(K)\n     104   0.00   0.000008   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 339, (B,b) = (G_of_w[1],G_of_w[2])\n     104   0.24   0.040958   0.13     10109  	# line 340, Q = round(Q_of_w[1])\n     104   0.01   0.001238   0.00       121  	# line 341, i2 = find(diag(Q))\n     104   0.08   0.013342   0.01       901  	# line 342, i1 = setdiff(1:size(Q,1),i2)\n     104   0.03   0.004988   0.13      9759  	# line 343, (B11,B12,B21,B22) = (B[i1,i1],B[i1,i2],B[i2,i1],B[i2,i2])\n     104   0.04   0.007424   0.00       262  	# line 344, b1 = b[i1]\n     104   0.00   0.000043   0.00        10  	# line 345, b2 = b[i2]\n     104   0.00   0.000022   0.00         7  	# line 346, return (B11,B12,B21,B22,b1,b2)\n     104   1.15   0.197069   0.26     19562  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 350, Bhat = B22 - (B12' / B11) * B12\n     104   0.15   0.025190   0.25     19512  	# line 351, bhat = b2 - (B12' / B11) * b1\n     104   0.00   0.000403   0.00       113  	# line 352, return (round(Bhat,10),bhat)\n     104   0.00   0.000038   0.00        10  	# line 357, w = float($(Expr(:comprehension, :(-(d[i]) / D[i,i]), :(i = 1:length(d)))))\n   29436   0.02   0.003913   0.04      2826  	# line 359, w = float($(Expr(:comprehension, :(d[i] / (v - D[i,i])), :(i = 1:length(d)))))\n   29540   0.00   0.000772   0.00         0  	# line 361, return w\n     104   0.00   0.000006   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 365, @mstr \" Solve the secular equation via binary search.\\n    \"\n     104   0.00   0.000005   0.00         0  	# line 367, eps = 1.0e-8\n     104   0.00   0.000045   0.00         5  	# line 368, solutions = Float64[]\n     104   0.00   0.000056   0.00         5  	# line 369, vectors = Array(Vector{Float64},0)\n     104   0.15   0.025855   0.00       258  	# line 370, poles = sort(unique(round(diag(D),10)))\n     624   0.00   0.000041   0.00         0  	# line 376, high = poles[i]\n     104   0.00   0.000016   0.00         0  	# line 380, low = high - abs(poles[i] - poles[i + 1])\n     520   0.00   0.000019   0.00         0  	# line 382, low = high - abs(poles[i] - poles[i - 1]) / 2\n     624   0.00   0.000018   0.00         0  	# line 386, v = (high + low) / 2\n     624   0.00   0.000321   0.00        70  	# line 387, w = find_w(v,D,d)\n     624   0.00   0.000111   0.00        50  	# line 388, diff = (w' * w)[1] - c\n     624   0.00   0.000020   0.00         0  	# line 389, diff_old = 0\n     624   0.00   0.000019   0.00         0  	# line 390, stall = false\n      26   0.00   0.000003   0.00         0  	# line 393, stall = true\n    7149   0.00   0.000712   0.00       114  	# line 397, high = v\n    6725   0.00   0.000759   0.00       108  	# line 399, low = v\n   13874   0.00   0.000338   0.00         0  	# line 401, v = (high + low) / 2\n   13874   0.03   0.005909   0.02      1554  	# line 402, w = find_w(v,D,d)\n   13874   0.00   0.000537   0.00       222  	# line 403, diff_old = diff\n   13874   0.01   0.002183   0.01      1110  	# line 404, diff = (w' * w)[1] - c\n     598   0.00   0.000084   0.00        25  	# line 407, push!(solutions,v)\n     598   0.00   0.000098   0.00        25  	# line 408, push!(vectors,w)\n     624   0.00   0.000033   0.00         0  	# line 412, high = poles[i]\n     104   0.00   0.000007   0.00         0  	# line 416, low = high + abs(poles[i] - poles[i - 1])\n     520   0.00   0.000036   0.00         0  	# line 418, low = high + abs(poles[i] - poles[i + 1]) / 2\n     624   0.00   0.000019   0.00         0  	# line 421, v = (high + low) / 2\n     624   0.00   0.000270   0.00        70  	# line 422, w = find_w(v,D,d)\n     624   0.00   0.000103   0.00        50  	# line 423, diff = (w' * w)[1] - c\n     624   0.00   0.000019   0.00         0  	# line 424, diff_old = 0\n     624   0.00   0.000018   0.00         0  	# line 425, stall = false\n      20   0.00   0.000003   0.00         0  	# line 428, stall = true\n    6954   0.00   0.000739   0.00       111  	# line 432, high = v\n    7360   0.00   0.000734   0.00       118  	# line 434, low = v\n   14314   0.00   0.000367   0.00         0  	# line 436, v = (high + low) / 2\n   14314   0.04   0.006099   0.02      1603  	# line 437, w = find_w(v,D,d)\n   14314   0.00   0.000578   0.00       229  	# line 438, diff_old = diff\n   14314   0.01   0.002155   0.01      1145  	# line 439, diff = (w' * w)[1] - c\n     604   0.00   0.000044   0.00         1  	# line 442, push!(solutions,v)\n     604   0.00   0.000037   0.00         1  	# line 443, push!(vectors,w)\n     104   0.00   0.000010   0.00         3  	# line 446, return (solutions,vectors)\n    1202   0.00   0.000061   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 450, @mstr \" Reverse rotations and translations to map\\n    secular equation solution back to original problem\\n    space.\\n    \"\n    1202   3.63   0.623392   2.69    205590  	# line 454, w1opt = -B11 \\ (B12 * w2opt + b1 / 2)\n    1202   0.00   0.000774   0.02      1231  	# line 455, wopt = [w1opt,w2opt]\n    1202  29.63   5.088562  47.38   3626078  	# line 456, xopt = ((N * U) / K) * wopt + x_star\n    1202   0.00   0.000039   0.00         0  	# line 457, return xopt",
			"settings":
			{
				"buffer_size": 10188,
				"line_ending": "Unix",
				"name": "count  time(%)   time(s) bytes(%) bytes(k)"
			}
		},
		{
			"contents": "  count  time(%)   time(s) bytes(%) bytes(k)\n     104   0.00   0.000019   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 247, @mstr \" Return A1, A2, A3 where:\\n    * A1 corresponds to wind\\n    * A2 corresponds to angles + mismatch\\n    * A3 corresponds to angle difference vars\\n\\n    Used to find x_star, the min-norm solution to\\n    Ax=b such that x_star[idx3] = 0.\\n    \"\n     104   0.00   0.000005   0.00         0  	# line 255, (m,n) = size(A)\n     104   0.02   0.002400   0.01       580  	# line 256, idx1 = find(diag(Qobj))\n     104   0.25   0.037837   0.06      4196  	# line 257, idx2 = setdiff(1:n - T,idx1)\n     104   0.00   0.000006   0.00         0  	# line 258, idx3 = (n - T) + 1:n\n     104   0.29   0.044116   2.82    206697  	# line 260, (A1,A2) = (A[:,idx1],A[:,idx2])\n     104   0.33   0.050545   0.00         8  	# line 261, return (A1,A2,idx1,idx2,idx3)\n     104   0.00   0.000015   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 265, @mstr \" x_star is the n-vector by which the problem must\\n    be translated in the first step of the temporal\\n    instanton QCQP solution.\\n\\n    x_star is chosen to be the point in the set Ax=b\\n    nearest to the origin such that x_star[idx3] = 0.\\n    This condition ensures no linear term is introduced\\n    into the quadratic constraint.\\n    \"\n     104   0.00   0.000300   0.01       471  	# line 274, x_star = zeros(n)\n     104   5.98   0.921855   5.71    419284  	# line 275, Z = sparse([A1 A2]')\n     104  17.15   2.643186   8.50    624261  	# line 276, x_star[[idx1,idx2]] = (Z / (Z' * Z)) * b\n     104   0.00   0.000006   0.00         0  	# line 277, return x_star\n     208   0.00   0.000011   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 281, @mstr \" This function performs the change of variables from x to z,\\n    where z = x - x_star. (For translating a quadratic problem.)\\n    Returns triple H_of_x consisting of matrix H, vector h, constant kh.\\n\\n    Arguments\\n    G_of_x consists of matrix G, vector g, constant kg.\\n    x_star is translation.\\n\\n    Used to perform second step of temporal instanton solution method,\\n    assuming x_star is min-norm solution of Ax=b.\\n    \"\n     208   0.00   0.000019   0.00         0  	# line 292, (G,g,kg) = G_of_x\n     208   0.05   0.007855   0.02      1269  	# line 294, g = zeros(size(G,1),1)\n     208   0.00   0.000011   0.00         0  	# line 296, H = G\n     208   2.54   0.391331   7.08    520048  	# line 297, h = g + 2 * G * x_star\n     208   3.41   0.525526   0.39     28450  	# line 298, kh = kg + x_star' * G * x_star + g' * x_star\n     208   0.00   0.000285   0.00        12  	# line 299, return (H,h,kh[1])\n     104   0.00   0.000005   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 303, @mstr \" Find an orthonormal basis for the nullspace of A.\\n    This matrix may be used to rotate a temporal instanton\\n    problem instance to eliminate all but nullity(A) elements.\\n    \"\n     104   0.00   0.000006   0.00         0  	# line 307, (m,n) = size(A)\n     104   0.00   0.000005   0.00         0  	# line 311, dim_N = n - m\n     104  25.34   3.905940  14.74   1081942  	# line 316, q = (qr(A'; thin=false))[1]\n     104   1.88   0.289077   3.57    261949  	# line 317, R = circshift(q,(0,dim_N))\n     104   0.00   0.000007   0.00         0  	# line 318, return R\n     416   0.00   0.000044   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 322, @mstr \" Rotate quadratic G_of_x by\\n    rotation matrix R.\\n    \"\n     416   0.00   0.000031   0.00         0  	# line 325, (G,g,kg) = G_of_x\n     416   5.59   0.861549   3.80    278757  	# line 326, return (R * G * R',R * g,kg)\n     104   0.00   0.000012   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 330, @mstr \" Return K, the diagonal matrix whose elements are\\n    square roots of eigenvalues of the given matrix D.\\n    \"\n     104   0.00   0.000044   0.00       106  	# line 333, K = ones(length(D))\n     104   0.01   0.001120   0.00        75  	# line 334, K[find(D)] = sqrt(D[find(D)])\n     104   0.04   0.005490   0.14     10596  	# line 335, return diagm(K)\n     104   0.00   0.000006   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 339, (B,b) = (G_of_w[1],G_of_w[2])\n     104   0.28   0.042932   0.14     10109  	# line 340, Q = round(Q_of_w[1])\n     104   0.01   0.001218   0.00       121  	# line 341, i2 = find(diag(Q))\n     104   0.07   0.011512   0.01       901  	# line 342, i1 = setdiff(1:size(Q,1),i2)\n     104   0.03   0.004794   0.13      9759  	# line 343, (B11,B12,B21,B22) = (B[i1,i1],B[i1,i2],B[i2,i1],B[i2,i2])\n     104   0.05   0.007330   0.00       262  	# line 344, b1 = b[i1]\n     104   0.00   0.000051   0.00        10  	# line 345, b2 = b[i2]\n     104   0.00   0.000017   0.00         7  	# line 346, return (B11,B12,B21,B22,b1,b2)\n     104   0.31   0.048415   0.27     19562  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 350, Bhat = B22 - (B12' / B11) * B12\n     104   0.16   0.024382   0.27     19512  	# line 351, bhat = b2 - (B12' / B11) * b1\n     104   0.00   0.000386   0.00       113  	# line 352, return (round(Bhat,10),bhat)\n     104   0.00   0.000041   0.00        10  	# line 357, w = float($(Expr(:comprehension, :(-(d[i]) / D[i,i]), :(i = 1:length(d)))))\n   29436   0.02   0.003808   0.04      2826  	# line 359, w = float($(Expr(:comprehension, :(d[i] / (v - D[i,i])), :(i = 1:length(d)))))\n   29540   0.00   0.000678   0.00         0  	# line 361, return w\n     104   0.00   0.000006   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 365, @mstr \" Solve the secular equation via binary search.\\n    \"\n     104   0.00   0.000006   0.00         0  	# line 367, eps = 1.0e-8\n     104   0.00   0.000045   0.00         5  	# line 368, solutions = Float64[]\n     104   0.00   0.000056   0.00         5  	# line 369, vectors = Array(Vector{Float64},0)\n     104   0.17   0.025519   0.00       258  	# line 370, poles = sort(unique(round(diag(D),10)))\n     624   0.00   0.000037   0.00         0  	# line 376, high = poles[i]\n     104   0.00   0.000015   0.00         0  	# line 380, low = high - abs(poles[i] - poles[i + 1])\n     520   0.00   0.000021   0.00         0  	# line 382, low = high - abs(poles[i] - poles[i - 1]) / 2\n     624   0.00   0.000018   0.00         0  	# line 386, v = (high + low) / 2\n     624   0.00   0.000309   0.00        70  	# line 387, w = find_w(v,D,d)\n     624   0.00   0.000117   0.00        50  	# line 388, diff = (w' * w)[1] - c\n     624   0.00   0.000019   0.00         0  	# line 389, diff_old = 0\n     624   0.00   0.000018   0.00         0  	# line 390, stall = false\n      26   0.00   0.000003   0.00         0  	# line 393, stall = true\n    7149   0.00   0.000687   0.00       114  	# line 397, high = v\n    6725   0.00   0.000758   0.00       108  	# line 399, low = v\n   13874   0.00   0.000348   0.00         0  	# line 401, v = (high + low) / 2\n   13874   0.04   0.005692   0.02      1554  	# line 402, w = find_w(v,D,d)\n   13874   0.00   0.000467   0.00       222  	# line 403, diff_old = diff\n   13874   0.01   0.002183   0.02      1110  	# line 404, diff = (w' * w)[1] - c\n     598   0.00   0.000085   0.00        25  	# line 407, push!(solutions,v)\n     598   0.00   0.000097   0.00        25  	# line 408, push!(vectors,w)\n     624   0.00   0.000030   0.00         0  	# line 412, high = poles[i]\n     104   0.00   0.000006   0.00         0  	# line 416, low = high + abs(poles[i] - poles[i - 1])\n     520   0.00   0.000036   0.00         0  	# line 418, low = high + abs(poles[i] - poles[i + 1]) / 2\n     624   0.00   0.000018   0.00         0  	# line 421, v = (high + low) / 2\n     624   0.00   0.000262   0.00        70  	# line 422, w = find_w(v,D,d)\n     624   0.00   0.000104   0.00        50  	# line 423, diff = (w' * w)[1] - c\n     624   0.00   0.000018   0.00         0  	# line 424, diff_old = 0\n     624   0.00   0.000017   0.00         0  	# line 425, stall = false\n      20   0.00   0.000002   0.00         0  	# line 428, stall = true\n    6954   0.00   0.000674   0.00       111  	# line 432, high = v\n    7360   0.00   0.000707   0.00       118  	# line 434, low = v\n   14314   0.00   0.000354   0.00         0  	# line 436, v = (high + low) / 2\n   14314   0.04   0.005809   0.02      1603  	# line 437, w = find_w(v,D,d)\n   14314   0.00   0.000482   0.00       229  	# line 438, diff_old = diff\n   14314   0.01   0.002231   0.02      1145  	# line 439, diff = (w' * w)[1] - c\n     604   0.00   0.000044   0.00         1  	# line 442, push!(solutions,v)\n     604   0.00   0.000035   0.00         1  	# line 443, push!(vectors,w)\n     104   0.00   0.000009   0.00         3  	# line 446, return (solutions,vectors)\n    1202   0.00   0.000057   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 450, @mstr \" Reverse rotations and translations to map\\n    secular equation solution back to original problem\\n    space.\\n    \"\n    1202   7.36   1.134688   2.80    205590  	# line 454, w1opt = -B11 \\ (B12 * w2opt + b1 / 2)\n    1202   0.01   0.000783   0.02      1231  	# line 455, wopt = [w1opt,w2opt]\n    1202  28.53   4.398882  49.39   3626078  	# line 456, xopt = ((N * U) / K) * wopt + x_star\n    1202   0.00   0.000055   0.00         0  	# line 457, return xopt",
			"settings":
			{
				"buffer_size": 10188,
				"line_ending": "Unix",
				"name": "count  time(%)   time(s) bytes(%) bytes(k)"
			}
		},
		{
			"contents": "  count  time(%)   time(s) bytes(%) bytes(k)\n     104   0.00   0.000018   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 247, @mstr \" Return A1, A2, A3 where:\\n    * A1 corresponds to wind\\n    * A2 corresponds to angles + mismatch\\n    * A3 corresponds to angle difference vars\\n\\n    Used to find x_star, the min-norm solution to\\n    Ax=b such that x_star[idx3] = 0.\\n    \"\n     104   0.00   0.000005   0.00         0  	# line 255, (m,n) = size(A)\n     104   0.02   0.002126   0.01       580  	# line 256, idx1 = find(diag(Qobj))\n     104   0.29   0.036815   0.08      4196  	# line 257, idx2 = setdiff(1:n - T,idx1)\n     104   0.00   0.000006   0.00         0  	# line 258, idx3 = (n - T) + 1:n\n     104   1.09   0.137119   4.12    206697  	# line 260, (A1,A2) = (A[:,idx1],A[:,idx2])\n     104   0.68   0.085618   0.00         8  	# line 261, return (A1,A2,idx1,idx2,idx3)\n     104   0.00   0.000005   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 265, @mstr \" x_star is the n-vector by which the problem must\\n    be translated in the first step of the temporal\\n    instanton QCQP solution.\\n\\n    x_star is chosen to be the point in the set Ax=b\\n    nearest to the origin such that x_star[idx3] = 0.\\n    This condition ensures no linear term is introduced\\n    into the quadratic constraint.\\n    \"\n     104   0.00   0.000532   0.01       471  	# line 274, x_star = zeros(n)\n     104   3.79   0.475026   8.37    419284  	# line 275, Z = sparse([A1 A2]')\n     104  21.93   2.748968  12.46    624319  	# line 276, x_star[[idx1,idx2]] = (Z / (Z' * Z)) * b\n     104   0.00   0.000005   0.00         0  	# line 277, return x_star\n     208   0.00   0.000013   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 281, @mstr \" This function performs the change of variables from x to z,\\n    where z = x - x_star. (For translating a quadratic problem.)\\n    Returns triple H_of_x consisting of matrix H, vector h, constant kh.\\n\\n    Arguments\\n    G_of_x consists of matrix G, vector g, constant kg.\\n    x_star is translation.\\n\\n    Used to perform second step of temporal instanton solution method,\\n    assuming x_star is min-norm solution of Ax=b.\\n    \"\n     208   0.00   0.000017   0.00         0  	# line 292, (G,g,kg) = G_of_x\n     208   0.06   0.008072   0.03      1269  	# line 294, g = zeros(size(G,1),1)\n     208   0.00   0.000009   0.00         0  	# line 296, H = G\n     208   5.16   0.646146  10.38    520048  	# line 297, h = g + 2 * G * x_star\n     208   4.33   0.543178   0.57     28452  	# line 298, kh = kg + x_star' * G * x_star + g' * x_star\n     208   0.00   0.000278   0.00        12  	# line 299, return (H,h,kh[1])\n     104   0.00   0.000005   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 303, @mstr \" Find an orthonormal basis for the nullspace of A.\\n    This matrix may be used to rotate a temporal instanton\\n    problem instance to eliminate all but nullity(A) elements.\\n    \"\n     104   0.00   0.000005   0.00         0  	# line 307, (m,n) = size(A)\n     104   0.00   0.000005   0.00         0  	# line 311, dim_N = n - m\n     104  29.72   3.724387  21.60   1082774  	# line 316, q = (qr(A'; thin=false))[1]\n     104   2.99   0.375033   5.23    261949  	# line 317, R = circshift(q,(0,dim_N))\n     104   0.00   0.000006   0.00         0  	# line 318, return R\n     416   0.00   0.000038   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 322, @mstr \" Rotate quadratic G_of_x by\\n    rotation matrix R.\\n    \"\n     416   0.00   0.000028   0.00         0  	# line 325, (G,g,kg) = G_of_x\n     416   8.04   1.008091   5.56    278757  	# line 326, return (R * G * R',R * g,kg)\n     104   0.00   0.000011   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 330, @mstr \" Return K, the diagonal matrix whose elements are\\n    square roots of eigenvalues of the given matrix D.\\n    \"\n     104   0.00   0.000043   0.00       106  	# line 333, K = ones(length(D))\n     104   0.01   0.001112   0.00        75  	# line 334, K[find(D)] = sqrt(D[find(D)])\n     104   0.04   0.005332   0.21     10596  	# line 335, return diagm(K)\n     104   0.00   0.000006   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 339, (B,b) = (G_of_w[1],G_of_w[2])\n     104   0.34   0.042399   0.20     10109  	# line 340, Q = round(Q_of_w[1])\n     104   0.01   0.001246   0.00       121  	# line 341, i2 = find(diag(Q))\n     104   0.09   0.011294   0.02       901  	# line 342, i1 = setdiff(1:size(Q,1),i2)\n     104   0.04   0.004731   0.19      9759  	# line 343, (B11,B12,B21,B22) = (B[i1,i1],B[i1,i2],B[i2,i1],B[i2,i2])\n     104   0.06   0.007378   0.01       262  	# line 344, b1 = b[i1]\n     104   0.00   0.000042   0.00        10  	# line 345, b2 = b[i2]\n     104   0.00   0.000022   0.00         7  	# line 346, return (B11,B12,B21,B22,b1,b2)\n     104   0.21   0.026374   0.39     19562  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 350, Bhat = B22 - (B12' / B11) * B12\n     104   0.19   0.024333   0.39     19512  	# line 351, bhat = b2 - (B12' / B11) * b1\n     104   0.00   0.000377   0.00       113  	# line 352, return (round(Bhat,10),bhat)\n     104   0.00   0.000032   0.00        10  	# line 357, w = float($(Expr(:comprehension, :(-(d[i]) / D[i,i]), :(i = 1:length(d)))))\n   29436   0.03   0.003755   0.06      2826  	# line 359, w = float($(Expr(:comprehension, :(d[i] / (v - D[i,i])), :(i = 1:length(d)))))\n   29540   0.01   0.000684   0.00         0  	# line 361, return w\n     104   0.00   0.000006   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 365, @mstr \" Solve the secular equation via binary search.\\n    \"\n     104   0.00   0.000005   0.00         0  	# line 367, eps = 1.0e-8\n     104   0.00   0.000047   0.00         5  	# line 368, solutions = Float64[]\n     104   0.00   0.000056   0.00         5  	# line 369, vectors = Array(Vector{Float64},0)\n     104   0.21   0.025745   0.01       258  	# line 370, poles = sort(unique(round(diag(D),10)))\n     624   0.00   0.000044   0.00         0  	# line 376, high = poles[i]\n     104   0.00   0.000019   0.00         0  	# line 380, low = high - abs(poles[i] - poles[i + 1])\n     520   0.00   0.000019   0.00         0  	# line 382, low = high - abs(poles[i] - poles[i - 1]) / 2\n     624   0.00   0.000018   0.00         0  	# line 386, v = (high + low) / 2\n     624   0.00   0.000333   0.00        70  	# line 387, w = find_w(v,D,d)\n     624   0.00   0.000110   0.00        50  	# line 388, diff = (w' * w)[1] - c\n     624   0.00   0.000018   0.00         0  	# line 389, diff_old = 0\n     624   0.00   0.000018   0.00         0  	# line 390, stall = false\n      26   0.00   0.000003   0.00         0  	# line 393, stall = true\n    7149   0.01   0.000703   0.00       114  	# line 397, high = v\n    6725   0.01   0.000777   0.00       108  	# line 399, low = v\n   13874   0.00   0.000327   0.00         0  	# line 401, v = (high + low) / 2\n   13874   0.05   0.005748   0.03      1554  	# line 402, w = find_w(v,D,d)\n   13874   0.00   0.000546   0.00       222  	# line 403, diff_old = diff\n   13874   0.02   0.002066   0.02      1110  	# line 404, diff = (w' * w)[1] - c\n     598   0.00   0.000077   0.00        25  	# line 407, push!(solutions,v)\n     598   0.00   0.000088   0.00        25  	# line 408, push!(vectors,w)\n     624   0.00   0.000033   0.00         0  	# line 412, high = poles[i]\n     104   0.00   0.000006   0.00         0  	# line 416, low = high + abs(poles[i] - poles[i - 1])\n     520   0.00   0.000035   0.00         0  	# line 418, low = high + abs(poles[i] - poles[i + 1]) / 2\n     624   0.00   0.000017   0.00         0  	# line 421, v = (high + low) / 2\n     624   0.00   0.000264   0.00        70  	# line 422, w = find_w(v,D,d)\n     624   0.00   0.000100   0.00        50  	# line 423, diff = (w' * w)[1] - c\n     624   0.00   0.000017   0.00         0  	# line 424, diff_old = 0\n     624   0.00   0.000017   0.00         0  	# line 425, stall = false\n      20   0.00   0.000003   0.00         0  	# line 428, stall = true\n    6954   0.01   0.000676   0.00       111  	# line 432, high = v\n    7360   0.01   0.000714   0.00       118  	# line 434, low = v\n   14314   0.00   0.000336   0.00         0  	# line 436, v = (high + low) / 2\n   14314   0.05   0.005928   0.03      1603  	# line 437, w = find_w(v,D,d)\n   14314   0.00   0.000507   0.00       229  	# line 438, diff_old = diff\n   14314   0.02   0.002097   0.02      1145  	# line 439, diff = (w' * w)[1] - c\n     604   0.00   0.000041   0.00         1  	# line 442, push!(solutions,v)\n     604   0.00   0.000035   0.00         1  	# line 443, push!(vectors,w)\n     104   0.00   0.000010   0.00         3  	# line 446, return (solutions,vectors)\n    1202   0.00   0.000060   0.00         0  	# /home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton3.jl, line 450, @mstr \" Reverse rotations and translations to map\\n    secular equation solution back to original problem\\n    space.\\n    \"\n    1202   2.43   0.303961   4.10    205590  	# line 454, w1opt = -B11 \\ (B12 * w2opt + b1 / 2)\n    1202   0.01   0.000663   0.02      1231  	# line 455, wopt = [w1opt,w2opt]\n    1202  18.03   2.260261  25.84   1295237  	# line 457, xopt = N * U * diagm(1 ./ diag(K)) * wopt + x_star\n    1202   0.00   0.000036   0.00         0  	# line 458, return xopt",
			"settings":
			{
				"buffer_size": 10202,
				"line_ending": "Unix",
				"name": "count  time(%)   time(s) bytes(%) bytes(k)"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 220.0,
		"last_filter": "anfnf",
		"selected_items":
		[
			[
				"anfnf",
				"ANF: New File"
			],
			[
				"anfn",
				"ANF: New File"
			],
			[
				"ssla",
				"Set Syntax: LaTeXing"
			],
			[
				"sslate",
				"Set Syntax: LaTeX"
			],
			[
				"anf",
				"ANF: Copy Current File"
			],
			[
				"anfr",
				"ANF: Rename File"
			],
			[
				"user",
				"Preferences: Settings - User"
			],
			[
				"pkgi",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Preferences: Browse Packages"
			],
			[
				"packa",
				"Package Control: Upgrade Package"
			],
			[
				"anfd",
				"ANF: Delete Current File"
			],
			[
				"pkglist",
				"Package Control: List Packages"
			],
			[
				"upgra",
				"Package Control: Upgrade Package"
			],
			[
				"matl",
				"Set Syntax: MATLAB"
			],
			[
				"mat",
				"Set Syntax: MATLAB"
			],
			[
				"inde",
				"Indentation: Convert to Spaces"
			],
			[
				"anfc",
				"ANF: Copy Current File"
			],
			[
				"ma",
				"Set Syntax: MATLAB"
			],
			[
				"",
				"Convert Case: Title Case"
			],
			[
				"julia",
				"Set Syntax: Julia"
			],
			[
				"juli",
				"Set Syntax: Julia"
			],
			[
				"inden",
				"Indentation: Convert to Spaces"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"lines",
				"Table Editor: Show demo film in new scratch view"
			],
			[
				"matla",
				"Set Syntax: MATLAB"
			],
			[
				"ann",
				"ANF: New File"
			],
			[
				"an",
				"ANF: Rename File"
			],
			[
				"anr",
				"ANF: Rename File"
			],
			[
				"pkg in",
				"Package Control: Install Package"
			],
			[
				"packa in",
				"Package Control: Install Package"
			],
			[
				"table",
				"Table Editor: Enable for current view"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"fold",
				"Project: Add Folder"
			]
		],
		"width": 1204.0
	},
	"console":
	{
		"height": 252.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/notes"
	],
	"file_history":
	[
		"/home/jkersulis/Documents/matpower/matpower4.1/case9.m",
		"/home/jkersulis/Downloads/sparse null/luq.m",
		"/home/jkersulis/Downloads/sparse null/demo.m",
		"/home/jkersulis/Downloads/sparse null/spspaces.m",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/tmp_inst_rts96.jl",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/REQUIRE",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/PowerFlow.jl",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/LineThermalModel.jl",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton.jl",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TemporalInstanton2.jl",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/readRTS96Data.jl",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/2015-04-14-GroupPresentation/ipynb_presentation_building.md",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/2015-04-14-GroupPresentation/slides.slides.html",
		"/home/jkersulis/.ipython/profile_julia/ipython_notebook_config.py",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/quals2/presentation/slides.ipynb",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/notes/2015-05-04 Meeting with Ian.md",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/notes/2015-04-15-Meeting-with-Ian.md",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/data/RTS-96 Data/CaseData.m",
		"/home/jkersulis/.ipython/profile_julia/ipython_n",
		"/home/jkersulis/Documents/ipython/IPython/html/static/style/ipython.min.css",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/.gitignore",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/2015-04-14-GroupPresentation/style/misc.css",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/2015-04-14-GroupPresentation/slides.ipynb",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/2015-04-14-GroupPresentation/ipython.min.css",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/2015-04-14-GroupPresentation/font-awesome-4.3.0/css/font-awesome.css",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/2015-04-14-GroupPresentation/bootstrap-3.3.4-dist/css/bootstrap.css",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/plotResults.jl",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/maxTemp.jl",
		"/home/jkersulis/Documents/Dropbox/Winter 2015/511IOE/course_eval.md",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/TrustRegionSubproblem.jl",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/paper/paperdetails.txt",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/paper/PowerTechPaper_ian.tex",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/paper/PowerTechPaper.tex",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/plotTemporalInstantonResults",
		"/home/jkersulis/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/nbs/TrustRegionSubproblem.ipynb",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/notes/Quals2Abstract.md",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/notes/2015-03-04-meeting-with-Ian.md",
		"/home/jkersulis/Downloads/CaseData.m",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/README.md",
		"/home/jkersulis/Downloads/Report, 2015-03-02.html",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/psDataLoad.jl",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/src/instanton.jl",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/TemporalInstanton.jl",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/temporal-instanton/temporal-instanton.sublime-project",
		"/home/jkersulis/Documents/kersulis.github.io/_posts/2014-09-04-mhacks-and-the-new-term.md",
		"/home/jkersulis/Documents/kersulis.github.io/_posts/2014-09-05-mhacks.md",
		"/home/jkersulis/Documents/kersulis.github.io/_posts/2014-07-29-productivity-breakthrough.md",
		"/home/jkersulis/Documents/kersulis.github.io/_posts/2014-07-31-end-of-internship.md",
		"/home/jkersulis/Documents/kersulis.github.io/_posts/2014-07-25-morning-routine.md",
		"/home/jkersulis/Documents/kersulis.github.io/_posts/2014-07-20-summer-at-los-alamos.md",
		"/home/jkersulis/Documents/ipython/docs/source/whatsnew/version3_widget_migration.rst",
		"/home/jkersulis/Documents/kersulis.github.io/_drafts/2014-07-20-pomodoros.md",
		"/home/jkersulis/Documents/kersulis.github.io/_drafts/2015-02-19-ipython-anew.md",
		"/home/jkersulis/Documents/Dropbox/Winter 2015/511IOE/hw/ioe511.sublime-project",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/notes/2015-02-06-sustainability.md",
		"/home/jkersulis/Documents/Dropbox/Winter 2015/511IOE/hw/4hw/code/check.m",
		"/home/jkersulis/Documents/Dropbox/Winter 2015/511IOE/hw/4hw/code/f.m",
		"/home/jkersulis/Documents/Dropbox/Winter 2015/511IOE/hw/4hw/code/grad.m",
		"/home/jkersulis/Documents/Dropbox/Winter 2015/511IOE/hw/4hw/code/backtracking.m",
		"/home/jkersulis/Documents/Dropbox/Winter 2015/511IOE/hw/4hw/code/bisection.m",
		"/home/jkersulis/Documents/Dropbox/Winter 2015/511IOE/hw/3hw/solution/bisection.m",
		"/home/jkersulis/Documents/Dropbox/Winter 2015/511IOE/hw/3hw/solution/backtracking.m",
		"/home/jkersulis/Documents/Dropbox/Winter 2015/511IOE/hw/4hw/code/hesseval.m",
		"/home/jkersulis/Documents/Dropbox/Winter 2015/511IOE/hw/4hw/code/hess.m",
		"/home/jkersulis/Documents/Dropbox/Winter 2015/511IOE/hw/4hw/.ipynb_checkpoints/hessian-checkpoint.ipynb",
		"/home/jkersulis/Documents/Dropbox/Winter 2015/511IOE/hw/3hw/solution/check.m",
		"/home/jkersulis/Documents/Dropbox/Winter 2015/511IOE/hw/4hw/code/newtbt.m",
		"/home/jkersulis/Documents/Dropbox/Winter 2015/511IOE/hw/3hw/solution/f.m",
		"/home/jkersulis/Documents/Dropbox/Winter 2015/511IOE/hw/3hw/solution/grad.m",
		"/home/jkersulis/Documents/Dropbox/InstantonAnew/Jonas Edits/Time-Coupled Instanton/notes/2015-02-05-meeting-with-Ian.md",
		"/home/jkersulis/Downloads/Start/index.html",
		"/home/jkersulis/Documents/sandBox/matpowerProject/System.jl",
		"/home/jkersulis/Documents/matpower/matpower4.1/opf_args.m",
		"/home/jkersulis/Documents/matpower/matpower4.1/dcopf.m",
		"/home/jkersulis/Documents/matpower/matpower4.1/t/soln9_opf_PQcap.mat",
		"/home/jkersulis/Documents/matpower/matpower4.1/opf.m",
		"/home/jkersulis/Documents/matpower/matpower4.1/define_constants.m",
		"/home/jkersulis/Documents/matpower/matpower4.1/rundcopf.m",
		"/home/jkersulis/Documents/matpower/matpower4.1/remove_userfcn.m",
		"/home/jkersulis/Documents/matpower/matpower4.1/README",
		"/home/jkersulis/Documents/matpower/matpower4.1/dcpf.m",
		"/home/jkersulis/Documents/ipython/build/lib.linux-x86_64-2.7/IPython/html/utils.py",
		"/home/jkersulis/Documents/ipython/build/lib/IPython/html/utils.py",
		"/home/jkersulis/Documents/ipython/IPython/html/tests/base/utils.js",
		"/home/jkersulis/Documents/ipython/IPython/kernel/tests/utils.py",
		"/home/jkersulis/Documents/ipython/IPython/html/utils.py",
		"/home/jkersulis/Documents/ipython/IPython/parallel/util.py",
		"/home/jkersulis/Documents/ipython/docs/source/whatsnew/pr/user-templates.rst",
		"/home/jkersulis/Documents/ipython/.ipynb_checkpoints/Untitled-checkpoint.ipynb",
		"/home/jkersulis/Documents/ipython/IPython/html/widgets/widget.py",
		"/home/jkersulis/Documents/ipython/IPython/html/widgets/widget_image.py",
		"/home/jkersulis/Documents/ipython/IPython/html/static/components/es6-promise/promise.min.js",
		"/home/jkersulis/Documents/ipython/build/lib/IPython/html/static/components/es6-promise/promise.js",
		"/home/jkersulis/Documents/ipython/build/lib.linux-x86_64-2.7/IPython/html/static/components/es6-promise/promise.js",
		"/home/jkersulis/Documents/ipython/IPython/html/static/components/es6-promise/promise.js",
		"/home/jkersulis/Documents/ipython/IPython/core/prompts.py",
		"/home/jkersulis/Documents/ipython/IPython/core/profileapp.py",
		"/home/jkersulis/Documents/ipython/examples/IPython Kernel/Third Party Rich Output.ipynb",
		"/home/jkersulis/Documents/ipython/git-hooks/post-checkout",
		"/home/jkersulis/Documents/ipython/examples/IPython Kernel/ipython-get-history.py",
		"/home/jkersulis/Documents/ipython/docs/source/whatsnew/github-stats-0.11.rst",
		"/home/jkersulis/Documents/ipython/docs/resources/generate_icons.sh",
		"/home/jkersulis/Documents/ipython/IPython/html/static/components/bootstrap/fonts/glyphicons-halflings-regular.woff",
		"/home/jkersulis/Documents/ipython/IPython/html/static/components/bootstrap/less/responsive-embed.less",
		"/home/jkersulis/Documents/ipython/README.rst",
		"/home/jkersulis/Documents/ipython/build/scripts-2.7/ipython",
		"/home/jkersulis/Documents/ipython/examples/Interactive Widgets/Image Processing.ipynb",
		"/home/jkersulis/Documents/ipython/build/scripts-2.7/ipcluster",
		"/home/jkersulis/Documents/kersulis.github.io/_posts/2015-01-15-matpower-in-julia.md",
		"/home/jkersulis/Documents/kersulis.github.io/_posts/2015-01-16-matpower-in-julia-take-two.md",
		"/home/jkersulis/Documents/matpowerCases.jl/src/matpowerCases.jl",
		"/home/jkersulis/Documents/kersulis.github.io/README.md",
		"/home/jkersulis/Documents/matpowerCases.jl/README.md",
		"/home/jkersulis/Documents/kersulis.github.io/about.md",
		"/home/jkersulis/Documents/MatpowerCases.jl/.gitignore",
		"/home/jkersulis/Documents/Power.jl/README.md",
		"/home/jkersulis/Documents/kersulis.github.io/2015-01-16-matpower-in-julia-take-two.md",
		"/home/jkersulis/Documents/kersulis.github.io/_posts/2015-01-16-matpower-in-julia-again.md",
		"/home/jkersulis/Documents/matpowerCases.jl/REQUIRE",
		"/home/jkersulis/Documents/Power.jl/src/Power.jl",
		"/home/jkersulis/Documents/matpowerCases.jl/.gitignore",
		"/home/jkersulis/Documents/MATPOWERcases/case9Q.m",
		"/home/jkersulis/.julia/v0.3/Power/src/Power.jl",
		"/home/jkersulis/Documents/Power.jl/REQUIRE",
		"/home/jkersulis/Documents/Power.jl/RE",
		"/home/jkersulis/Documents/kersulis.github.io/_drafts/2015-01-14-cost-of-outage.md",
		"/home/jkersulis/Documents/kersulis.github.io/_posts/2015-01-14-cost-of-outage.md"
	],
	"find":
	{
		"height": 61.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"@ipro",
			";",
			"iprofile",
			"qr",
			"return_xopt",
			"find_x_St",
			"partition_A",
			"idx1",
			"find_x_star",
			"@ipro",
			"partition_A",
			"T0",
			"function",
			"psdataload",
			"load",
			"model",
			"tmp_inst_A",
			"\\\\",
			"overflow-y",
			".map",
			"ipython.min.css.m",
			"mathjax",
			"reveal.js",
			"reveal",
			"reveal	",
			"reveal.",
			"html",
			"reveal.js",
			"Helvetica",
			"000",
			"587abc",
			"5677fc",
			"    \n",
			"G_of_x",
			"tmp_inst_A",
			"solver",
			"part",
			"trans_rotat",
			"min_norm",
			"find_w",
			"sparse",
			"start",
			"push",
			"rotation",
			"tmp_inst",
			"generate",
			"Generate",
			"generate",
			"Generate",
			"generate",
			"Generate",
			"generate",
			"Generate",
			"generate",
			"Generate",
			"generate",
			"Generate",
			"generate",
			"Generate",
			"generate",
			"generateQobj",
			"Generate",
			"generate",
			" ",
			"Params",
			"Ts",
			"*",
			"#",
			".",
			"#",
			"::Float64",
			"register",
			"widgetmodel",
			"promise",
			"registry",
			".mat",
			"c",
			"mathjax",
			"within",
			"touch",
			"]",
			"face",
			"*",
			"Step",
			"step",
			"kerne",
			"mathjax",
			"#",
			"# ",
			"       #",
			"Lines",
			"       # ",
			"#",
			"mosek",
			")\n"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/TemporalInstanton3.jl",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18470,
						"regions":
						{
						},
						"selection":
						[
							[
								14373,
								14373
							]
						],
						"settings":
						{
							"WordCountSyntax": "julia",
							"_anf_new": "",
							"syntax": "Packages/Julia/Julia.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 16801.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/home/jkersulis/Documents/notebook/README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 833,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"WordCountShouldRun": true,
							"WordCountSyntax": "markdown",
							"syntax": "Packages/Markdown/Markdown.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/readRTS96Data.jl",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4251,
						"regions":
						{
						},
						"selection":
						[
							[
								484,
								421
							]
						],
						"settings":
						{
							"WordCountShouldRun": true,
							"WordCountSyntax": "julia",
							"syntax": "Packages/Julia/Julia.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10437,
						"regions":
						{
						},
						"selection":
						[
							[
								1961,
								1961
							]
						],
						"settings":
						{
							"WordCountShouldRun": true,
							"WordCountSyntax": "plain text",
							"auto_name": "count  time(%)   time(s) bytes(%) bytes(k)",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10521,
						"regions":
						{
						},
						"selection":
						[
							[
								3745,
								3745
							]
						],
						"settings":
						{
							"WordCountSyntax": "plain text",
							"auto_name": "count  time(%)   time(s) bytes(%) bytes(k)",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 315.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 5,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10515,
						"regions":
						{
						},
						"selection":
						[
							[
								1938,
								1938
							]
						],
						"settings":
						{
							"WordCountSyntax": "plain text",
							"auto_name": "count  time(%)   time(s) bytes(%) bytes(k)",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 6,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10188,
						"regions":
						{
						},
						"selection":
						[
							[
								3490,
								3490
							]
						],
						"settings":
						{
							"WordCountSyntax": "plain text",
							"auto_name": "count  time(%)   time(s) bytes(%) bytes(k)",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 735.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 7,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10188,
						"regions":
						{
						},
						"selection":
						[
							[
								10103,
								10103
							]
						],
						"settings":
						{
							"WordCountSyntax": "plain text",
							"auto_name": "count  time(%)   time(s) bytes(%) bytes(k)",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 980.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 8,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10202,
						"regions":
						{
						},
						"selection":
						[
							[
								2551,
								2551
							]
						],
						"settings":
						{
							"WordCountSyntax": "plain text",
							"auto_name": "count  time(%)   time(s) bytes(%) bytes(k)",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 43.0
	},
	"input":
	{
		"height": 56.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "temporal-instanton.sublime-project",
	"replace":
	{
		"height": 82.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"readr",
				"temporal-instanton/src/readRTS96Data.jl"
			],
			[
				"rts",
				"temporal-instanton/src/tmp_inst_rts96.jl"
			],
			[
				"tempora",
				"temporal-instanton/src/TemporalInstanton2.jl"
			],
			[
				"tempo",
				"temporal-instanton/src/TemporalInstanton2.jl"
			],
			[
				"linetherm",
				"temporal-instanton/src/LineThermalModel.jl"
			],
			[
				"temporal",
				"temporal-instanton/src/TemporalInstanton2.jl"
			],
			[
				"read",
				"temporal-instanton/src/readRTS96Data.jl"
			],
			[
				"tmp",
				"temporal-instanton/src/tmp_inst_rts96.jl"
			],
			[
				"psdata",
				"temporal-instanton/data/RTS-96 Data/CaseData.m"
			],
			[
				"instanton",
				"temporal-instanton/src/TemporalInstanton2.jl"
			],
			[
				"slid",
				"temporal-instanton/quals2/presentation/slides.ipynb"
			],
			[
				".m",
				"temporal-instanton/data/RTS-96 Data/CaseData.m"
			],
			[
				"4-15",
				"temporal-instanton/notes/2015-04-15-Meeting-with-Ian.md"
			],
			[
				".giit",
				"temporal-instanton/.gitignore"
			],
			[
				"pre",
				"temporal-instanton/2015-04-14-GroupPresentation/ipynb_presentation_building.md"
			],
			[
				"font",
				"temporal-instanton/2015-04-14-GroupPresentation/font-awesome-4.3.0/css/font-awesome.css"
			],
			[
				"boot",
				"temporal-instanton/2015-04-14-GroupPresentation/bootstrap-3.3.4-dist/css/bootstrap.css"
			],
			[
				"slides",
				"temporal-instanton/2015-04-14-GroupPresentation/slides.slides.html"
			],
			[
				"power",
				"temporal-instanton/paper/PowerTechPaper.tex"
			],
			[
				"ian",
				"temporal-instanton/paper/PowerTechPaper_ian.tex"
			],
			[
				"trust",
				"temporal-instanton/src/TrustRegionSubproblem.jl"
			],
			[
				"trus",
				"temporal-instanton/nbs/TrustRegionSubproblem.ipynb"
			],
			[
				"qual",
				"temporal-instanton/notes/Quals2Abstract.md"
			],
			[
				"bise",
				"4hw/code/bisection.m"
			],
			[
				"baa",
				"3hw/solution/backtracking.m"
			],
			[
				"back",
				"4hw/code/backtracking.m"
			],
			[
				"newt",
				"4hw/code/newtbt.m"
			],
			[
				"chec",
				"4hw/code/check.m"
			],
			[
				"hes",
				"4hw/code/hess.m"
			],
			[
				"check",
				"4hw/code/check.m"
			],
			[
				"new",
				"4hw/code/newtpure.m"
			],
			[
				"grad",
				"4hw/code/grad.m"
			],
			[
				"f",
				"4hw/code/f.m"
			],
			[
				"sdb",
				"4hw/code/sdbisection.m"
			],
			[
				"gra",
				"4hw/code/grad.m"
			],
			[
				"opf_exe",
				"opf_execute.m"
			],
			[
				"opf_set",
				"opf_setup.m"
			],
			[
				"opf",
				"opf.m"
			],
			[
				"dcop",
				"dcopf.m"
			],
			[
				"runpf",
				"runpf.m"
			],
			[
				"dcpf",
				"dcpf.m"
			],
			[
				"utils",
				"IPython/html/static/base/js/utils.js"
			],
			[
				"promise",
				"IPython/html/static/components/es6-promise/promise.js"
			],
			[
				"rea",
				"README.md"
			],
			[
				"abou",
				"about.md"
			],
			[
				"cos",
				"_posts/2015-01-14-cost-of-outage.md"
			],
			[
				"hea",
				"_includes/head.html"
			],
			[
				"about",
				"about.md"
			],
			[
				"mha",
				"_posts/2014-09-04-MHacks-and-the-new-term.md"
			],
			[
				"scsss",
				"_sass/_site.scss"
			],
			[
				"scss",
				"assets/css/main.scss"
			],
			[
				"page",
				"_sass/_page.scss"
			],
			[
				"main.",
				"_site/assets/css/main.css"
			],
			[
				"main",
				"_site/assets/css/main.css"
			],
			[
				"post-in",
				"_layouts/post-index.html"
			],
			[
				"css",
				"_sass/_site.scss"
			],
			[
				".css",
				"_sass/_page.scss"
			],
			[
				"post",
				"_templates/post"
			],
			[
				"assets",
				"assets/css/main.scss"
			],
			[
				"tags",
				"tags/index.html"
			],
			[
				"inde",
				"index.html"
			],
			[
				"theme",
				"theme-setup/index.md"
			],
			[
				"confi",
				"kersulis.github.io/_config.yml"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 1000.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Documents/PowerSystemDataStructure.jl/datastructure.sublime-project"
			]
		],
		"width": 760.0
	},
	"select_symbol":
	{
		"height": 64.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 784.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 405.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
